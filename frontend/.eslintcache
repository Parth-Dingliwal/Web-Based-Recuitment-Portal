[{"C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\index.js":"1","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\App.js":"2","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Welcome.js":"4","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Login.js":"5","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Navbar.js":"6","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Logout.js":"7","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Signup.js":"8","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\recruiter\\CreateJobs.js":"9","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js":"10","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Applications.js":"11","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Profile.js":"12","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Home.js":"13","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\recruiter\\MyJobs.js":"14","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\recruiter\\JobApplications.js":"15","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\recruiter\\Profile.js":"16","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\MessagePopup.js":"17","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\isAuth.js":"18","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\apiList.js":"19","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\EmailInput.js":"20","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\PasswordInput.js":"21","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\FileUploadInput.js":"22","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\index.js":"23","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\App.js":"24","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\reportWebVitals.js":"25","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Navbar.js":"26","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Logout.js":"27","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Welcome.js":"28","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Profile.js":"29","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Login.js":"30","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Applications.js":"31","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Home.js":"32","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Signup.js":"33","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\recruiter\\JobApplications.js":"34","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\isAuth.js":"35","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\recruiter\\CreateJobs.js":"36","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js":"37","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\recruiter\\Profile.js":"38","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\recruiter\\MyJobs.js":"39","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\MessagePopup.js":"40","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\apiList.js":"41","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\FileUploadInput.js":"42","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\EmailInput.js":"43","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\PasswordInput.js":"44","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\CodeEditor.js":"45","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\index.js":"46","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\reportWebVitals.js":"47","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\App.js":"48","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Logout.js":"49","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Login.js":"50","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Welcome.js":"51","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Navbar.js":"52","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Home.js":"53","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Profile.js":"54","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Signup.js":"55","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Applications.js":"56","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\CodeEditor.js":"57","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\recruiter\\CreateJobs.js":"58","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\recruiter\\Profile.js":"59","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\recruiter\\MyJobs.js":"60","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js":"61","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\recruiter\\JobApplications.js":"62","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\MessagePopup.js":"63","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\isAuth.js":"64","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\EmailInput.js":"65","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\PasswordInput.js":"66","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\apiList.js":"67","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\FileUploadInput.js":"68"},{"size":517,"mtime":1668410983786,"results":"69","hashOfConfig":"70"},{"size":3443,"mtime":1668410983778,"results":"71","hashOfConfig":"70"},{"size":375,"mtime":1668410983790,"results":"72","hashOfConfig":"70"},{"size":775,"mtime":1668410983782,"results":"73","hashOfConfig":"70"},{"size":3691,"mtime":1668410983780,"results":"74","hashOfConfig":"70"},{"size":2627,"mtime":1668410983781,"results":"75","hashOfConfig":"70"},{"size":509,"mtime":1668410983780,"results":"76","hashOfConfig":"70"},{"size":14812,"mtime":1668410983782,"results":"77","hashOfConfig":"70"},{"size":8403,"mtime":1668410983783,"results":"78","hashOfConfig":"70"},{"size":25164,"mtime":1668410983783,"results":"79","hashOfConfig":"70"},{"size":7626,"mtime":1668410983779,"results":"80","hashOfConfig":"70"},{"size":8836,"mtime":1668410983781,"results":"81","hashOfConfig":"70"},{"size":21741,"mtime":1668410983779,"results":"82","hashOfConfig":"70"},{"size":26561,"mtime":1668410983784,"results":"83","hashOfConfig":"70"},{"size":22988,"mtime":1668410983784,"results":"84","hashOfConfig":"70"},{"size":5201,"mtime":1668410983785,"results":"85","hashOfConfig":"70"},{"size":523,"mtime":1668410983788,"results":"86","hashOfConfig":"70"},{"size":174,"mtime":1668410983789,"results":"87","hashOfConfig":"70"},{"size":452,"mtime":1668410983789,"results":"88","hashOfConfig":"70"},{"size":1210,"mtime":1668410983787,"results":"89","hashOfConfig":"70"},{"size":1724,"mtime":1668410983789,"results":"90","hashOfConfig":"70"},{"size":3392,"mtime":1668410983788,"results":"91","hashOfConfig":"70"},{"size":517,"mtime":1668410986786,"results":"92","hashOfConfig":"93"},{"size":3509,"mtime":1678959789804,"results":"94","hashOfConfig":"93"},{"size":375,"mtime":1668410983790,"results":"95","hashOfConfig":"93"},{"size":39074,"mtime":1678981634814,"results":"96","hashOfConfig":"93"},{"size":509,"mtime":1668410983780,"results":"97","hashOfConfig":"93"},{"size":775,"mtime":1668410983782,"results":"98","hashOfConfig":"93"},{"size":45156,"mtime":1671103100268,"results":"99","hashOfConfig":"93"},{"size":39949,"mtime":1671119510949,"results":"100","hashOfConfig":"93"},{"size":44028,"mtime":1671103069906,"results":"101","hashOfConfig":"93"},{"size":58153,"mtime":1671103014604,"results":"102","hashOfConfig":"93"},{"size":51218,"mtime":1671103107001,"results":"103","hashOfConfig":"93"},{"size":59441,"mtime":1671103139760,"results":"104","hashOfConfig":"93"},{"size":174,"mtime":1668410983789,"results":"105","hashOfConfig":"93"},{"size":44637,"mtime":1671103135304,"results":"106","hashOfConfig":"93"},{"size":61709,"mtime":1671103130361,"results":"107","hashOfConfig":"93"},{"size":41478,"mtime":1671103149037,"results":"108","hashOfConfig":"93"},{"size":63059,"mtime":1671103144861,"results":"109","hashOfConfig":"93"},{"size":523,"mtime":1668410983788,"results":"110","hashOfConfig":"93"},{"size":452,"mtime":1668410983789,"results":"111","hashOfConfig":"93"},{"size":39715,"mtime":1678650155241,"results":"112","hashOfConfig":"93"},{"size":1210,"mtime":1668410983787,"results":"113","hashOfConfig":"93"},{"size":1724,"mtime":1668410983789,"results":"114","hashOfConfig":"93"},{"size":279,"mtime":1678959258910,"results":"115","hashOfConfig":"93"},{"size":517,"mtime":1668410986786,"results":"116","hashOfConfig":"117"},{"size":375,"mtime":1668410983790,"results":"118","hashOfConfig":"117"},{"size":3509,"mtime":1678959789804,"results":"119","hashOfConfig":"117"},{"size":509,"mtime":1668410983780,"results":"120","hashOfConfig":"117"},{"size":40025,"mtime":1671119510949,"results":"121","hashOfConfig":"117"},{"size":775,"mtime":1668410983782,"results":"122","hashOfConfig":"117"},{"size":39150,"mtime":1678981634814,"results":"123","hashOfConfig":"117"},{"size":58505,"mtime":1685114646494,"results":"124","hashOfConfig":"117"},{"size":45232,"mtime":1671103100268,"results":"125","hashOfConfig":"117"},{"size":51664,"mtime":1685118330274,"results":"126","hashOfConfig":"117"},{"size":44282,"mtime":1685114981399,"results":"127","hashOfConfig":"117"},{"size":279,"mtime":1678959257910,"results":"128","hashOfConfig":"117"},{"size":44713,"mtime":1671103135304,"results":"129","hashOfConfig":"117"},{"size":41554,"mtime":1671103149037,"results":"130","hashOfConfig":"117"},{"size":63420,"mtime":1685034393410,"results":"131","hashOfConfig":"117"},{"size":61785,"mtime":1671103130361,"results":"132","hashOfConfig":"117"},{"size":59517,"mtime":1685113556626,"results":"133","hashOfConfig":"117"},{"size":523,"mtime":1668410983788,"results":"134","hashOfConfig":"117"},{"size":174,"mtime":1668410983789,"results":"135","hashOfConfig":"117"},{"size":1210,"mtime":1668410983787,"results":"136","hashOfConfig":"117"},{"size":1724,"mtime":1668410983789,"results":"137","hashOfConfig":"117"},{"size":452,"mtime":1668410983789,"results":"138","hashOfConfig":"117"},{"size":40042,"mtime":1685119916884,"results":"139","hashOfConfig":"117"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"1u3yosn",{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"142"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"142"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"142"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"142"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"142"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"142"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"142"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"142"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"142"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"142"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"142"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"nm0qd7",{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"200"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"200"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"200"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"200"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dy23xk",{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"251"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"251"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"251"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"251"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"251"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"251"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\index.js",[],["296","297"],"C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\App.js",["298"],"import { createContext, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\r\nimport Navbar from \"./component/Navbar\";\r\nimport Login from \"./component/Login\";\r\nimport Logout from \"./component/Logout\";\r\nimport Signup from \"./component/Signup\";\r\nimport Home from \"./component/Home\";\r\nimport Applications from \"./component/Applications\";\r\nimport Profile from \"./component/Profile\";\r\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\r\nimport MyJobs from \"./component/recruiter/MyJobs\";\r\nimport JobApplications from \"./component/recruiter/JobApplications\";\r\nimport AcceptedApplicants from \"./component/recruiter/AcceptedApplicants\";\r\nimport RecruiterProfile from \"./component/recruiter/Profile\";\r\nimport MessagePopup from \"./lib/MessagePopup\";\r\nimport isAuth, { userType } from \"./lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"98vh\",\r\n    paddingTop: \"64px\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport const SetPopupContext = createContext();\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [popup, setPopup] = useState({\r\n    open: false,\r\n    severity: \"\",\r\n    message: \"\",\r\n  });\r\n  return (\r\n    <BrowserRouter>\r\n      <SetPopupContext.Provider value={setPopup}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item xs>\r\n            <Navbar />\r\n          </Grid>\r\n          <Grid item className={classes.body}>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Welcome />\r\n              </Route>\r\n              <Route exact path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route exact path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Route exact path=\"/logout\">\r\n                <Logout />\r\n              </Route>\r\n              <Route exact path=\"/home\">\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/applications\">\r\n                <Applications />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                {userType() === \"recruiter\" ? (\r\n                  <RecruiterProfile />\r\n                ) : (\r\n                  <Profile />\r\n                )}\r\n              </Route>\r\n              <Route exact path=\"/addjob\">\r\n                <CreateJobs />\r\n              </Route>\r\n              <Route exact path=\"/myjobs\">\r\n                <MyJobs />\r\n              </Route>\r\n              <Route exact path=\"/job/applications/:jobId\">\r\n                <JobApplications />\r\n              </Route>\r\n              <Route exact path=\"/employees\">\r\n                <AcceptedApplicants />\r\n              </Route>\r\n              <Route>\r\n                <ErrorPage />\r\n              </Route>\r\n            </Switch>\r\n          </Grid>\r\n        </Grid>\r\n        <MessagePopup\r\n          open={popup.open}\r\n          setOpen={(status) =>\r\n            setPopup({\r\n              ...popup,\r\n              open: status,\r\n            })\r\n          }\r\n          severity={popup.severity}\r\n          message={popup.message}\r\n        />\r\n      </SetPopupContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Welcome.js",[],"C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Login.js",["299"],"import { useContext, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport PasswordInput from \"../lib/PasswordInput\";\r\nimport EmailInput from \"../lib/EmailInput\";\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport isAuth from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: \"60px 60px\",\r\n  },\r\n  inputBox: {\r\n    width: \"300px\",\r\n  },\r\n  submitButton: {\r\n    width: \"300px\",\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [loggedin, setLoggedin] = useState(isAuth());\r\n\r\n  const [loginDetails, setLoginDetails] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [inputErrorHandler, setInputErrorHandler] = useState({\r\n    email: {\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    password: {\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setLoginDetails({\r\n      ...loginDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleInputError = (key, status, message) => {\r\n    setInputErrorHandler({\r\n      ...inputErrorHandler,\r\n      [key]: {\r\n        error: status,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\r\n      return inputErrorHandler[obj].error;\r\n    });\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.login, loginDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return loggedin ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Paper elevation={3} className={classes.body}>\r\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Login\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <EmailInput\r\n            label=\"Email\"\r\n            value={loginDetails.email}\r\n            onChange={(event) => handleInput(\"email\", event.target.value)}\r\n            inputErrorHandler={inputErrorHandler}\r\n            handleInputError={handleInputError}\r\n            className={classes.inputBox}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={loginDetails.password}\r\n            onChange={(event) => handleInput(\"password\", event.target.value)}\r\n            className={classes.inputBox}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => handleLogin()}\r\n            className={classes.submitButton}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Navbar.js",[],"C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Logout.js",["300"],"import { useEffect, useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nconst Logout = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"type\");\r\n    setPopup({\r\n      open: true,\r\n      severity: \"success\",\r\n      message: \"Logged out successfully\",\r\n    });\r\n  }, []);\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default Logout;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Signup.js",["301","302"],"import { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n  MenuItem,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\n\r\nimport PasswordInput from \"../lib/PasswordInput\";\r\nimport EmailInput from \"../lib/EmailInput\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport isAuth from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: \"60px 60px\",\r\n  },\r\n  inputBox: {\r\n    width: \"400px\",\r\n  },\r\n  submitButton: {\r\n    width: \"400px\",\r\n  },\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid\r\n          item\r\n          container\r\n          className={classes.inputBox}\r\n          key={key}\r\n          style={{ paddingLeft: 0, paddingRight: 0 }}\r\n        >\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [loggedin, setLoggedin] = useState(isAuth());\r\n\r\n  const [signupDetails, setSignupDetails] = useState({\r\n    type: \"applicant\",\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    education: [],\r\n    skills: [],\r\n    resume: \"\",\r\n    profile: \"\",\r\n    bio: \"\",\r\n    contactNumber: \"\",\r\n  });\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [inputErrorHandler, setInputErrorHandler] = useState({\r\n    email: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    password: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    name: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setSignupDetails({\r\n      ...signupDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleInputError = (key, status, message) => {\r\n    setInputErrorHandler({\r\n      ...inputErrorHandler,\r\n      [key]: {\r\n        required: true,\r\n        untouched: false,\r\n        error: status,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    console.log(education);\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n      education: education\r\n        .filter((obj) => obj.institutionName.trim() !== \"\")\r\n        .map((obj) => {\r\n          if (obj[\"endYear\"] === \"\") {\r\n            delete obj[\"endYear\"];\r\n          }\r\n          return obj;\r\n        }),\r\n    };\r\n\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleLoginRecruiter = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\n    console.log(updatedDetails);\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return loggedin ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Paper elevation={3} className={classes.body}>\r\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Signup\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            select\r\n            label=\"Category\"\r\n            variant=\"outlined\"\r\n            className={classes.inputBox}\r\n            value={signupDetails.type}\r\n            onChange={(event) => {\r\n              handleInput(\"type\", event.target.value);\r\n            }}\r\n          >\r\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\r\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            label=\"Name\"\r\n            value={signupDetails.name}\r\n            onChange={(event) => handleInput(\"name\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.name.error}\r\n            helperText={inputErrorHandler.name.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"name\", true, \"Name is required\");\r\n              } else {\r\n                handleInputError(\"name\", false, \"\");\r\n              }\r\n            }}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <EmailInput\r\n            label=\"Email\"\r\n            value={signupDetails.email}\r\n            onChange={(event) => handleInput(\"email\", event.target.value)}\r\n            inputErrorHandler={inputErrorHandler}\r\n            handleInputError={handleInputError}\r\n            className={classes.inputBox}\r\n            required={true}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={signupDetails.password}\r\n            onChange={(event) => handleInput(\"password\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.password.error}\r\n            helperText={inputErrorHandler.password.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"password\", true, \"Password is required\");\r\n              } else {\r\n                handleInputError(\"password\", false, \"\");\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        {signupDetails.type === \"applicant\" ? (\r\n          <>\r\n            <MultifieldInput\r\n              education={education}\r\n              setEducation={setEducation}\r\n            />\r\n            <Grid item>\r\n              <ChipInput\r\n                className={classes.inputBox}\r\n                label=\"Skills\"\r\n                variant=\"outlined\"\r\n                helperText=\"Press enter to add skills\"\r\n                onChange={(chips) =>\r\n                  setSignupDetails({ ...signupDetails, skills: chips })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Resume (.pdf)\"\r\n                icon={<DescriptionIcon />}\r\n                // value={files.resume}\r\n                // onChange={(event) =>\r\n                //   setFiles({\r\n                //     ...files,\r\n                //     resume: event.target.files[0],\r\n                //   })\r\n                // }\r\n                uploadTo={apiList.uploadResume}\r\n                handleInput={handleInput}\r\n                identifier={\"resume\"}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Profile Photo (.jpg/.png)\"\r\n                icon={<FaceIcon />}\r\n                // value={files.profileImage}\r\n                // onChange={(event) =>\r\n                //   setFiles({\r\n                //     ...files,\r\n                //     profileImage: event.target.files[0],\r\n                //   })\r\n                // }\r\n                uploadTo={apiList.uploadProfileImage}\r\n                handleInput={handleInput}\r\n                identifier={\"profile\"}\r\n              />\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid item style={{ width: \"100%\" }}>\r\n              <TextField\r\n                label=\"Bio (upto 250 words)\"\r\n                multiline\r\n                rows={8}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"outlined\"\r\n                value={signupDetails.bio}\r\n                onChange={(event) => {\r\n                  if (\r\n                    event.target.value.split(\" \").filter(function (n) {\r\n                      return n != \"\";\r\n                    }).length <= 250\r\n                  ) {\r\n                    handleInput(\"bio\", event.target.value);\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <PhoneInput\r\n                country={\"in\"}\r\n                value={phone}\r\n                onChange={(phone) => setPhone(phone)}\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              signupDetails.type === \"applicant\"\r\n                ? handleLogin()\r\n                : handleLoginRecruiter();\r\n            }}\r\n            className={classes.submitButton}\r\n          >\r\n            Signup\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n// {/* <Grid item>\r\n//           <PasswordInput\r\n//             label=\"Re-enter Password\"\r\n//             value={signupDetails.tmpPassword}\r\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\r\n//             className={classes.inputBox}\r\n//             labelWidth={140}\r\n//             helperText={inputErrorHandler.tmpPassword.message}\r\n//             error={inputErrorHandler.tmpPassword.error}\r\n//             onBlur={(event) => {\r\n//               if (event.target.value !== signupDetails.password) {\r\n//                 handleInputError(\r\n//                   \"tmpPassword\",\r\n//                   true,\r\n//                   \"Passwords are not same.\"\r\n//                 );\r\n//               }\r\n//             }}\r\n//           />\r\n//         </Grid> */}\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\recruiter\\CreateJobs.js",["303","304"],"import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst CreateJobs = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [jobDetails, setJobDetails] = useState({\r\n    title: \"\",\r\n    maxApplicants: 100,\r\n    maxPositions: 30,\r\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\r\n      .toISOString()\r\n      .substr(0, 16),\r\n    skillsets: [],\r\n    jobType: \"Full Time\",\r\n    duration: 0,\r\n    salary: 0,\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setJobDetails({\r\n      ...jobDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    console.log(jobDetails);\r\n    axios\r\n      .post(apiList.jobs, jobDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        setJobDetails({\r\n          title: \"\",\r\n          maxApplicants: 100,\r\n          maxPositions: 30,\r\n          deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\r\n            .toISOString()\r\n            .substr(0, 16),\r\n          skillsets: [],\r\n          jobType: \"Full Time\",\r\n          duration: 0,\r\n          salary: 0,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\", width: \"\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Add Job</Typography>\r\n        </Grid>\r\n        <Grid item container xs direction=\"column\" justify=\"center\">\r\n          <Grid item>\r\n            <Paper\r\n              style={{\r\n                padding: \"20px\",\r\n                outline: \"none\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"stretch\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Title\"\r\n                    value={jobDetails.title}\r\n                    onChange={(event) =>\r\n                      handleInput(\"title\", event.target.value)\r\n                    }\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <ChipInput\r\n                    className={classes.inputBox}\r\n                    label=\"Skills\"\r\n                    variant=\"outlined\"\r\n                    helperText=\"Press enter to add skills\"\r\n                    value={jobDetails.skillsets}\r\n                    onAdd={(chip) =>\r\n                      setJobDetails({\r\n                        ...jobDetails,\r\n                        skillsets: [...jobDetails.skillsets, chip],\r\n                      })\r\n                    }\r\n                    onDelete={(chip, index) => {\r\n                      let skillsets = jobDetails.skillsets;\r\n                      skillsets.splice(index, 1);\r\n                      setJobDetails({\r\n                        ...jobDetails,\r\n                        skillsets: skillsets,\r\n                      });\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    select\r\n                    label=\"Job Type\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.jobType}\r\n                    onChange={(event) => {\r\n                      handleInput(\"jobType\", event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    <MenuItem value=\"Full Time\">Full Time</MenuItem>\r\n                    <MenuItem value=\"Part Time\">Part Time</MenuItem>\r\n                    <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    select\r\n                    label=\"Duration\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.duration}\r\n                    onChange={(event) => {\r\n                      handleInput(\"duration\", event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    <MenuItem value={0}>Flexible</MenuItem>\r\n                    <MenuItem value={1}>1 Month</MenuItem>\r\n                    <MenuItem value={2}>2 Months</MenuItem>\r\n                    <MenuItem value={3}>3 Months</MenuItem>\r\n                    <MenuItem value={4}>4 Months</MenuItem>\r\n                    <MenuItem value={5}>5 Months</MenuItem>\r\n                    <MenuItem value={6}>6 Months</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Salary\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.salary}\r\n                    onChange={(event) => {\r\n                      handleInput(\"salary\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 0 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Application Deadline\"\r\n                    type=\"datetime-local\"\r\n                    value={jobDetails.deadline}\r\n                    onChange={(event) => {\r\n                      handleInput(\"deadline\", event.target.value);\r\n                    }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Maximum Number Of Applicants\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.maxApplicants}\r\n                    onChange={(event) => {\r\n                      handleInput(\"maxApplicants\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 1 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Positions Available\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.maxPositions}\r\n                    onChange={(event) => {\r\n                      handleInput(\"maxPositions\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 1 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n                onClick={() => handleUpdate()}\r\n              >\r\n                Create Job\r\n              </Button>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateJobs;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js",["305","306","307","308","309","310","311","312","313"],"import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          {/* <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Application Status\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"rejected\"\r\n                      checked={searchOptions.status.rejected}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Rejected\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"applied\"\r\n                      checked={searchOptions.status.applied}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Applied\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"shortlisted\"\r\n                      checked={searchOptions.status.shortlisted}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Shortlisted\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid> */}\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"name\"\r\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"name\">\r\n                    <Typography>Name</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"jobTitle\"\r\n                    checked={searchOptions.sort[\"job.title\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"job.title\": {\r\n                            ...searchOptions.sort[\"job.title\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"jobTitle\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"jobTitle\">\r\n                    <Typography>Job Title</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"job.title\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"job.title\": {\r\n                            ...searchOptions.sort[\"job.title\"],\r\n                            desc: !searchOptions.sort[\"job.title\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"job.title\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"dateOfJoining\"\r\n                    checked={searchOptions.sort.dateOfJoining.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfJoining: {\r\n                            ...searchOptions.sort.dateOfJoining,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"dateOfJoining\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"dateOfJoining\">\r\n                    <Typography>Date of Joining</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.dateOfJoining.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfJoining: {\r\n                            ...searchOptions.sort.dateOfJoining,\r\n                            desc: !searchOptions.sort.dateOfJoining.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.dateOfJoining.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\r\n                              .desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [openEndJob, setOpenEndJob] = useState(false);\r\n  const [rating, setRating] = useState(application.jobApplicant.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, applicantId: application.jobApplicant.userId },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        // fetchRating();\r\n        getData();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        // fetchRating();\r\n        getData();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseEndJob = () => {\r\n    setOpenEndJob(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  const getResume = () => {\r\n    if (\r\n      application.jobApplicant.resume &&\r\n      application.jobApplicant.resume !== \"\"\r\n    ) {\r\n      const address = `${server}${application.jobApplicant.resume}`;\r\n      console.log(address);\r\n      axios(address, {\r\n        method: \"GET\",\r\n        responseType: \"blob\",\r\n      })\r\n        .then((response) => {\r\n          const file = new Blob([response.data], { type: \"application/pdf\" });\r\n          const fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"No resume found\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        handleCloseEndJob();\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n        handleCloseEndJob();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Job Title: {application.job.title}</Grid>\r\n          <Grid item>Role: {application.job.jobType}</Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              color=\"primary\"\r\n              onClick={() => getResume()}\r\n            >\r\n              Download Resume\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs>\r\n            {/* {buttonSet[application.status]} */}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: \"#09BC8A\",\r\n              }}\r\n              onClick={() => {\r\n                setOpenEndJob(true);\r\n              }}\r\n            >\r\n              End Job\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Rate Applicant\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n      <Modal\r\n        open={openEndJob}\r\n        onClose={handleCloseEndJob}\r\n        className={classes.popupDialog}\r\n      >\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Are you sure?\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => {\r\n                  updateStatus(\"finished\");\r\n                }}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleCloseEndJob()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst AcceptedApplicants = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      \"job.title\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfJoining: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n    searchParams = [...searchParams, `status=accepted`];\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Employees</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton onClick={() => setFilterOpen(true)}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                {/* {console.log(obj)} */}\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AcceptedApplicants;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Applications.js",["314","315","316","317","318","319","320","321","322"],"import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [rating, setRating] = useState(application.job.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n  const joinedOn = new Date(application.dateOfJoining);\r\n\r\n  const fetchRating = () => {\r\n    axios\r\n      .get(`${apiList.rating}?id=${application.job._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setRating(response.data.rating);\r\n        console.log(response.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, jobId: application.job._id },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{application.job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>Posted By: {application.recruiter.name}</Grid>\r\n          <Grid item>Role : {application.job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {application.job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {application.job.duration !== 0\r\n              ? `${application.job.duration} month`\r\n              : `Flexible`}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>Joined On: {joinedOn.toLocaleDateString()}</Grid>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item xs>\r\n            <Paper\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: colorSet[application.status],\r\n                color: \"#ffffff\",\r\n              }}\r\n            >\r\n              {application.status}\r\n            </Paper>\r\n          </Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.statusBlock}\r\n                onClick={() => {\r\n                  fetchRating();\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                Rate Job\r\n              </Button>\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst Applications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.applications, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Applications</Typography>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs\r\n        direction=\"column\"\r\n        style={{ width: \"100%\" }}\r\n        alignItems=\"stretch\"\r\n        justify=\"center\"\r\n      >\r\n        {applications.length > 0 ? (\r\n          applications.map((obj) => (\r\n            <Grid item>\r\n              <ApplicationTile application={obj} />\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n            No Applications Found\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Applications;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Profile.js",["323","324","325","326","327","328","329"],"import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid item container className={classes.inputBox} key={key}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item style={{ alignSelf: \"center\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [userData, setUserData] = useState();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    name: \"\",\r\n    education: [],\r\n    skills: [],\r\n    resume: \"\",\r\n    profile: \"\",\r\n  });\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleInput = (key, value) => {\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.user, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setProfileDetails(response.data);\r\n        if (response.data.education.length > 0) {\r\n          setEducation(\r\n            response.data.education.map((edu) => ({\r\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\r\n              startYear: edu.startYear ? edu.startYear : \"\",\r\n              endYear: edu.endYear ? edu.endYear : \"\",\r\n            }))\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const editDetails = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    console.log(education);\r\n\r\n    let updatedDetails = {\r\n      ...profileDetails,\r\n      education: education\r\n        .filter((obj) => obj.institutionName.trim() !== \"\")\r\n        .map((obj) => {\r\n          if (obj[\"endYear\"] === \"\") {\r\n            delete obj[\"endYear\"];\r\n          }\r\n          return obj;\r\n        }),\r\n    };\r\n\r\n    axios\r\n      .put(apiList.user, updatedDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Profile</Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper\r\n            style={{\r\n              padding: \"20px\",\r\n              outline: \"none\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  value={profileDetails.name}\r\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                  className={classes.inputBox}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <MultifieldInput\r\n                education={education}\r\n                setEducation={setEducation}\r\n              />\r\n              <Grid item>\r\n                <ChipInput\r\n                  className={classes.inputBox}\r\n                  label=\"Skills\"\r\n                  variant=\"outlined\"\r\n                  helperText=\"Press enter to add skills\"\r\n                  value={profileDetails.skills}\r\n                  onAdd={(chip) =>\r\n                    setProfileDetails({\r\n                      ...profileDetails,\r\n                      skills: [...profileDetails.skills, chip],\r\n                    })\r\n                  }\r\n                  onDelete={(chip, index) => {\r\n                    let skills = profileDetails.skills;\r\n                    skills.splice(index, 1);\r\n                    setProfileDetails({\r\n                      ...profileDetails,\r\n                      skills: skills,\r\n                    });\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FileUploadInput\r\n                  className={classes.inputBox}\r\n                  label=\"Resume (.pdf)\"\r\n                  icon={<DescriptionIcon />}\r\n                  uploadTo={apiList.uploadResume}\r\n                  handleInput={handleInput}\r\n                  identifier={\"resume\"}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FileUploadInput\r\n                  className={classes.inputBox}\r\n                  label=\"Profile Photo (.jpg/.png)\"\r\n                  icon={<FaceIcon />}\r\n                  uploadTo={apiList.uploadProfileImage}\r\n                  handleInput={handleInput}\r\n                  identifier={\"profile\"}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n              onClick={() => handleUpdate()}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Modal open={open} onClose={handleClose} className={classes.popupDialog}> */}\r\n\r\n      {/* </Modal> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\Home.js",["330","331","332","333","334","335","336"],"import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport { userType } from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst JobTile = (props) => {\r\n  const classes = useStyles();\r\n  const { job } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [sop, setSop] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setSop(\"\");\r\n  };\r\n\r\n  const handleApply = () => {\r\n    console.log(job._id);\r\n    console.log(sop);\r\n    axios\r\n      .post(\r\n        `${apiList.jobs}/${job._id}/applications`,\r\n        {\r\n          sop: sop,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        handleClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const deadline = new Date(job.deadline).toLocaleDateString();\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\r\n          </Grid>\r\n          <Grid item>Role : {job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\r\n          </Grid>\r\n          <Grid item>Posted By : {job.recruiter.name}</Grid>\r\n          <Grid item>Application Deadline : {deadline}</Grid>\r\n\r\n          <Grid item>\r\n            {job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => {\r\n              setOpen(true);\r\n            }}\r\n            disabled={userType() === \"recruiter\"}\r\n          >\r\n            Apply\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"50%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <TextField\r\n            label=\"Write SOP (upto 250 words)\"\r\n            multiline\r\n            rows={8}\r\n            style={{ width: \"100%\", marginBottom: \"30px\" }}\r\n            variant=\"outlined\"\r\n            value={sop}\r\n            onChange={(event) => {\r\n              if (\r\n                event.target.value.split(\" \").filter(function (n) {\r\n                  return n != \"\";\r\n                }).length <= 250\r\n              ) {\r\n                setSop(event.target.value);\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => handleApply()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Job Type\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"fullTime\"\r\n                      checked={searchOptions.jobType.fullTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Full Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"partTime\"\r\n                      checked={searchOptions.jobType.partTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Part Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"wfh\"\r\n                      checked={searchOptions.jobType.wfh}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Work From Home\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Salary\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Slider\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={(value) => {\r\n                  return value * (100000 / 100);\r\n                }}\r\n                marks={[\r\n                  { value: 0, label: \"0\" },\r\n                  { value: 100, label: \"100000\" },\r\n                ]}\r\n                value={searchOptions.salary}\r\n                onChange={(event, value) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    salary: value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Duration\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                select\r\n                label=\"Duration\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={searchOptions.duration}\r\n                onChange={(event) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    duration: event.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <MenuItem value=\"0\">All</MenuItem>\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n                <MenuItem value=\"2\">2</MenuItem>\r\n                <MenuItem value=\"3\">3</MenuItem>\r\n                <MenuItem value=\"4\">4</MenuItem>\r\n                <MenuItem value=\"5\">5</MenuItem>\r\n                <MenuItem value=\"6\">6</MenuItem>\r\n                <MenuItem value=\"7\">7</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"salary\"\r\n                    checked={searchOptions.sort.salary.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"salary\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"salary\">\r\n                    <Typography>Salary</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.salary.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            desc: !searchOptions.sort.salary.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.salary.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"duration\"\r\n                    checked={searchOptions.sort.duration.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"duration\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"duration\">\r\n                    <Typography>Duration</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.duration.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            desc: !searchOptions.sort.duration.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.duration.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort.rating.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.rating.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            desc: !searchOptions.sort.rating.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.rating.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst Home = (props) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    query: \"\",\r\n    jobType: {\r\n      fullTime: false,\r\n      partTime: false,\r\n      wfh: false,\r\n    },\r\n    salary: [0, 100],\r\n    duration: \"0\",\r\n    sort: {\r\n      salary: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      duration: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      rating: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n    if (searchOptions.query !== \"\") {\r\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\r\n    }\r\n    if (searchOptions.jobType.fullTime) {\r\n      searchParams = [...searchParams, `jobType=Full%20Time`];\r\n    }\r\n    if (searchOptions.jobType.partTime) {\r\n      searchParams = [...searchParams, `jobType=Part%20Time`];\r\n    }\r\n    if (searchOptions.jobType.wfh) {\r\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\r\n    }\r\n    if (searchOptions.salary[0] != 0) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.salary[1] != 100) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.duration != \"0\") {\r\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = apiList.jobs;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setJobs(\r\n          response.data.filter((obj) => {\r\n            const today = new Date();\r\n            const deadline = new Date(obj.deadline);\r\n            return deadline > today;\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs>\r\n            <Typography variant=\"h2\">Jobs</Typography>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField\r\n              label=\"Search Jobs\"\r\n              value={searchOptions.query}\r\n              onChange={(event) =>\r\n                setSearchOptions({\r\n                  ...searchOptions,\r\n                  query: event.target.value,\r\n                })\r\n              }\r\n              onKeyPress={(ev) => {\r\n                if (ev.key === \"Enter\") {\r\n                  getData();\r\n                }\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment>\r\n                    <IconButton onClick={() => getData()}>\r\n                      <SearchIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              style={{ width: \"500px\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton onClick={() => setFilterOpen(true)}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job) => {\r\n              return <JobTile job={job} />;\r\n            })\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No jobs found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n        {/* <Grid item>\r\n          <Pagination count={10} color=\"primary\" />\r\n        </Grid> */}\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\recruiter\\MyJobs.js",["337","338","339","340","341","342"],"import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n}));\r\n\r\nconst JobTile = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { job, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [openUpdate, setOpenUpdate] = useState(false);\r\n  const [jobDetails, setJobDetails] = useState(job);\r\n\r\n  console.log(jobDetails);\r\n\r\n  const handleInput = (key, value) => {\r\n    setJobDetails({\r\n      ...jobDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleClick = (location) => {\r\n    history.push(location);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseUpdate = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    console.log(job._id);\r\n    axios\r\n      .delete(`${apiList.jobs}/${job._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n        handleClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const handleJobUpdate = () => {\r\n    axios\r\n      .put(`${apiList.jobs}/${job._id}`, jobDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n        handleCloseUpdate();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleCloseUpdate();\r\n      });\r\n  };\r\n\r\n  const postedOn = new Date(job.dateOfPosting);\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\r\n          </Grid>\r\n          <Grid item>Role : {job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\r\n          </Grid>\r\n          <Grid item>Date Of Posting: {postedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>Number of Applicants: {job.maxApplicants}</Grid>\r\n          <Grid item>\r\n            Remaining Number of Positions:{\" \"}\r\n            {job.maxPositions - job.acceptedCandidates}\r\n          </Grid>\r\n          <Grid item>\r\n            {job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item xs>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\r\n            >\r\n              View Applications\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpenUpdate(true);\r\n              }}\r\n              style={{\r\n                background: \"#FC7A1E\",\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Delete Job\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Are you sure?\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleDelete()}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleClose()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n      <Modal\r\n        open={openUpdate}\r\n        onClose={handleCloseUpdate}\r\n        className={classes.popupDialog}\r\n      >\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Update Details\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            spacing={3}\r\n            style={{ margin: \"10px\" }}\r\n          >\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Application Deadline\"\r\n                type=\"datetime-local\"\r\n                value={jobDetails.deadline.substr(0, 16)}\r\n                onChange={(event) => {\r\n                  handleInput(\"deadline\", event.target.value);\r\n                }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Maximum Number Of Applicants\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={jobDetails.maxApplicants}\r\n                onChange={(event) => {\r\n                  handleInput(\"maxApplicants\", event.target.value);\r\n                }}\r\n                InputProps={{ inputProps: { min: 1 } }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Positions Available\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={jobDetails.maxPositions}\r\n                onChange={(event) => {\r\n                  handleInput(\"maxPositions\", event.target.value);\r\n                }}\r\n                InputProps={{ inputProps: { min: 1 } }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleJobUpdate()}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleCloseUpdate()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Job Type\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"fullTime\"\r\n                      checked={searchOptions.jobType.fullTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Full Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"partTime\"\r\n                      checked={searchOptions.jobType.partTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Part Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"wfh\"\r\n                      checked={searchOptions.jobType.wfh}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Work From Home\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Salary\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Slider\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={(value) => {\r\n                  return value * (100000 / 100);\r\n                }}\r\n                marks={[\r\n                  { value: 0, label: \"0\" },\r\n                  { value: 100, label: \"100000\" },\r\n                ]}\r\n                value={searchOptions.salary}\r\n                onChange={(event, value) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    salary: value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Duration\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                select\r\n                label=\"Duration\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={searchOptions.duration}\r\n                onChange={(event) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    duration: event.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <MenuItem value=\"0\">All</MenuItem>\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n                <MenuItem value=\"2\">2</MenuItem>\r\n                <MenuItem value=\"3\">3</MenuItem>\r\n                <MenuItem value=\"4\">4</MenuItem>\r\n                <MenuItem value=\"5\">5</MenuItem>\r\n                <MenuItem value=\"6\">6</MenuItem>\r\n                <MenuItem value=\"7\">7</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"salary\"\r\n                    checked={searchOptions.sort.salary.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"salary\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"salary\">\r\n                    <Typography>Salary</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.salary.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            desc: !searchOptions.sort.salary.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.salary.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"duration\"\r\n                    checked={searchOptions.sort.duration.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"duration\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"duration\">\r\n                    <Typography>Duration</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.duration.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            desc: !searchOptions.sort.duration.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.duration.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort.rating.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.rating.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            desc: !searchOptions.sort.rating.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.rating.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst MyJobs = (props) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    query: \"\",\r\n    jobType: {\r\n      fullTime: false,\r\n      partTime: false,\r\n      wfh: false,\r\n    },\r\n    salary: [0, 100],\r\n    duration: \"0\",\r\n    sort: {\r\n      salary: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      duration: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      rating: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [`myjobs=1`];\r\n    if (searchOptions.query !== \"\") {\r\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\r\n    }\r\n    if (searchOptions.jobType.fullTime) {\r\n      searchParams = [...searchParams, `jobType=Full%20Time`];\r\n    }\r\n    if (searchOptions.jobType.partTime) {\r\n      searchParams = [...searchParams, `jobType=Part%20Time`];\r\n    }\r\n    if (searchOptions.jobType.wfh) {\r\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\r\n    }\r\n    if (searchOptions.salary[0] != 0) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.salary[1] != 100) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.duration != \"0\") {\r\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = apiList.jobs;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setJobs(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs>\r\n            <Typography variant=\"h2\">My Jobs</Typography>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField\r\n              label=\"Search Jobs\"\r\n              value={searchOptions.query}\r\n              onChange={(event) =>\r\n                setSearchOptions({\r\n                  ...searchOptions,\r\n                  query: event.target.value,\r\n                })\r\n              }\r\n              onKeyPress={(ev) => {\r\n                if (ev.key === \"Enter\") {\r\n                  getData();\r\n                }\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment>\r\n                    <IconButton onClick={() => getData()}>\r\n                      <SearchIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              style={{ width: \"500px\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton onClick={() => setFilterOpen(true)}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job) => {\r\n              return <JobTile job={job} getData={getData} />;\r\n            })\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No jobs found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyJobs;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\recruiter\\JobApplications.js",["343","344","345","346","347","348"],"import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Application Status\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"rejected\"\r\n                      checked={searchOptions.status.rejected}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Rejected\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"applied\"\r\n                      checked={searchOptions.status.applied}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Applied\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"shortlisted\"\r\n                      checked={searchOptions.status.shortlisted}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Shortlisted\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"name\"\r\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"name\">\r\n                    <Typography>Name</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"dateOfApplication\"\r\n                    checked={searchOptions.sort.dateOfApplication.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"dateOfApplication\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"dateOfApplication\">\r\n                    <Typography>Date of Application</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.dateOfApplication.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            desc: !searchOptions.sort.dateOfApplication.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.dateOfApplication.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\r\n                              .desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  const getResume = () => {\r\n    if (\r\n      application.jobApplicant.resume &&\r\n      application.jobApplicant.resume !== \"\"\r\n    ) {\r\n      const address = `${server}${application.jobApplicant.resume}`;\r\n      console.log(address);\r\n      axios(address, {\r\n        method: \"GET\",\r\n        responseType: \"blob\",\r\n      })\r\n        .then((response) => {\r\n          const file = new Blob([response.data], { type: \"application/pdf\" });\r\n          const fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"No resume found\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const buttonSet = {\r\n    applied: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"shortlisted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"shortlisted\")}\r\n          >\r\n            Shortlist\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    shortlisted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"accepted\")}\r\n          >\r\n            Accept\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    rejected: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Rejected\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    accepted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Accepted\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    cancelled: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"cancelled\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Cancelled\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    finished: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"finished\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Finished\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            Education:{\" \"}\r\n            {application.jobApplicant.education\r\n              .map((edu) => {\r\n                return `${edu.institutionName} (${edu.startYear}-${\r\n                  edu.endYear ? edu.endYear : \"Ongoing\"\r\n                })`;\r\n              })\r\n              .join(\", \")}\r\n          </Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              color=\"primary\"\r\n              onClick={() => getResume()}\r\n            >\r\n              Download Resume\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs>\r\n            {buttonSet[application.status]}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            // onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst JobApplications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const { jobId } = useParams();\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    status: {\r\n      all: false,\r\n      applied: false,\r\n      shortlisted: false,\r\n    },\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfApplication: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n\r\n    if (searchOptions.status.rejected) {\r\n      searchParams = [...searchParams, `status=rejected`];\r\n    }\r\n    if (searchOptions.status.applied) {\r\n      searchParams = [...searchParams, `status=applied`];\r\n    }\r\n    if (searchOptions.status.shortlisted) {\r\n      searchParams = [...searchParams, `status=shortlisted`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}?jobId=${jobId}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}&${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Applications</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton onClick={() => setFilterOpen(true)}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                {/* {console.log(obj)} */}\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobApplications;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\component\\recruiter\\Profile.js",["349","350","351"],"import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    name: \"\",\r\n    bio: \"\",\r\n    contactNumber: \"\",\r\n  });\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const handleInput = (key, value) => {\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.user, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setProfileDetails(response.data);\r\n        setPhone(response.data.contactNumber);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    let updatedDetails = {\r\n      ...profileDetails,\r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...profileDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...profileDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n\r\n    axios\r\n      .put(apiList.user, updatedDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Profile</Typography>\r\n        </Grid>\r\n        <Grid item xs style={{ width: \"100%\" }}>\r\n          <Paper\r\n            style={{\r\n              padding: \"20px\",\r\n              outline: \"none\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              //   width: \"60%\",\r\n            }}\r\n          >\r\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  value={profileDetails.name}\r\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                  className={classes.inputBox}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Bio (upto 250 words)\"\r\n                  multiline\r\n                  rows={8}\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"outlined\"\r\n                  value={profileDetails.bio}\r\n                  onChange={(event) => {\r\n                    if (\r\n                      event.target.value.split(\" \").filter(function (n) {\r\n                        return n != \"\";\r\n                      }).length <= 250\r\n                    ) {\r\n                      handleInput(\"bio\", event.target.value);\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <PhoneInput\r\n                  country={\"in\"}\r\n                  value={phone}\r\n                  onChange={(phone) => setPhone(phone)}\r\n                  style={{ width: \"auto\" }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n              onClick={() => handleUpdate()}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\MessagePopup.js",["352"],"import { Snackbar, Slide } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst MessagePopup = (props) => {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.setOpen(false);\r\n  };\r\n  return (\r\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\r\n      <Alert onClose={handleClose} severity={props.severity}>\r\n        {props.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default MessagePopup;\r\n","C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\isAuth.js",[],"C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\apiList.js",[],"C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\EmailInput.js",[],"C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\PasswordInput.js",[],"C:\\Users\\RAHUL\\3D Objects\\web recuritment\\job-portal\\frontend\\src\\lib\\FileUploadInput.js",[],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\index.js",[],["353","354"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\App.js",["355","356"],"import { createContext, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\r\nimport Navbar from \"./component/Navbar\";\r\nimport Login from \"./component/Login\";\r\nimport Logout from \"./component/Logout\";\r\nimport Signup from \"./component/Signup\";\r\nimport Home from \"./component/Home\";\r\nimport Applications from \"./component/Applications\";\r\nimport Profile from \"./component/Profile\";\r\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\r\nimport MyJobs from \"./component/recruiter/MyJobs\";\r\nimport JobApplications from \"./component/recruiter/JobApplications\";\r\nimport AcceptedApplicants from \"./component/recruiter/AcceptedApplicants\";\r\nimport RecruiterProfile from \"./component/recruiter/Profile\";\r\nimport MessagePopup from \"./lib/MessagePopup\";\r\nimport isAuth, { userType } from \"./lib/isAuth\";\r\nimport CodeEditor from \"./component/CodeEditor\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"98vh\",\r\n    paddingTop: \"64px\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport const SetPopupContext = createContext();\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [popup, setPopup] = useState({\r\n    open: false,\r\n    severity: \"\",\r\n    message: \"\",\r\n  });\r\n  return (\r\n    <BrowserRouter>\r\n      <SetPopupContext.Provider value={setPopup}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item xs>\r\n            <Navbar />\r\n          </Grid>\r\n          <Grid item className={classes.body}>\r\n            <Switch>\r\n              \r\n              <Route exact path=\"/\">\r\n                <Welcome />\r\n              </Route>\r\n              <Route exact path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route exact path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Route exact path=\"/logout\">\r\n                <Logout />\r\n              </Route>\r\n              <Route exact path=\"/home\">\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/applications\">\r\n                <Applications />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                {userType() === \"recruiter\" ? (\r\n                  <RecruiterProfile />\r\n                ) : (\r\n                  <Profile />\r\n                )}\r\n              </Route>\r\n              <Route exact path=\"/addjob\">\r\n                <CreateJobs />\r\n              </Route>\r\n              <Route exact path=\"/myjobs\">\r\n                <MyJobs />\r\n              </Route>\r\n              <Route exact path=\"/job/applications/:jobId\">\r\n                <JobApplications />\r\n              </Route>\r\n              <Route exact path=\"/employees\">\r\n                <AcceptedApplicants />\r\n              </Route>\r\n              <Route>\r\n                <ErrorPage />\r\n              </Route>\r\n            </Switch>\r\n          </Grid>\r\n        </Grid>\r\n        <MessagePopup\r\n          open={popup.open}\r\n          setOpen={(status) =>\r\n            setPopup({\r\n              ...popup,\r\n              open: status,\r\n            })\r\n          }\r\n          severity={popup.severity}\r\n          message={popup.message}\r\n        />\r\n      </SetPopupContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Navbar.js",["357"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Logout.js",["358"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Welcome.js",[],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Profile.js",["359","360","361","362","363"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Login.js",["364"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Applications.js",["365","366","367","368","369","370","371","372"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Home.js",["373","374"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\Signup.js",["375"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\recruiter\\JobApplications.js",["376","377","378","379","380"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\isAuth.js",[],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\recruiter\\CreateJobs.js",["381","382"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js",["383","384","385","386","387","388","389"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\recruiter\\Profile.js",["390","391"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\recruiter\\MyJobs.js",["392","393"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\MessagePopup.js",["394"],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\apiList.js",[],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\FileUploadInput.js",[],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\EmailInput.js",[],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\lib\\PasswordInput.js",[],"C:\\Users\\RAHUL\\3D Objects\\Recruitment Project\\job-portal\\frontend\\src\\component\\CodeEditor.js",["395"],"import React from 'react'\r\nimport { Link} from 'react-router-dom';\r\n\r\nconst CodeEditor = () => {\r\n  return (\r\n    <a href=\"https://realtime-code-editor-using-socket.netlify.app/\" target=\"_blank\" rel=\"noopener noreferrer\">Go to Code Editor</a>\r\n  )\r\n}\r\n\r\nexport default CodeEditor","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\index.js",[],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\reportWebVitals.js",[],["396","397"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\App.js",["398","399"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Logout.js",["400"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Login.js",["401"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Welcome.js",[],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Navbar.js",["402"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Home.js",["403","404"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Profile.js",["405","406","407","408","409"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Signup.js",["410"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\Applications.js",["411","412","413","414","415","416","417","418"],"import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [rating, setRating] = useState(application.job.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n  const joinedOn = new Date(application.dateOfJoining);\r\n\r\n  const fetchRating = () => {\r\n    axios\r\n      .get(`${apiList.rating}?id=${application.job._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setRating(response.data.rating);\r\n        /* eslint-disable */console.log(...oo_oo(`a53a451b_0`,response.data));\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        /* eslint-disable */console.log(...oo_oo(`a53a451b_1`,err.response.data));\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, jobId: application.job._id },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        /* eslint-disable */console.log(...oo_oo(`a53a451b_2`,response.data));\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        /* eslint-disable */console.log(...oo_oo(`a53a451b_3`,err));\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{application.job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>Posted By: {application.recruiter.name}</Grid>\r\n          <Grid item>Role : {application.job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {application.job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {application.job.duration !== 0\r\n              ? `${application.job.duration} month`\r\n              : `Flexible`}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>Joined On: {joinedOn.toLocaleDateString()}</Grid>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}\r\n          style = {{\r\n            flexGrow : \"0\",\r\n            maxWidth : \"23%\",\r\n            maxHeight : \"40px\",\r\n            marginTop : \"174px\"\r\n          }}\r\n        >\r\n          <Grid item xs>\r\n            <Paper\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: colorSet[application.status],\r\n                color: \"#ffffff\",\r\n              }}\r\n            >\r\n              {application.status}\r\n            </Paper>\r\n          </Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.statusBlock}\r\n                onClick={() => {\r\n                  fetchRating();\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                Rate Job\r\n              </Button>\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst Applications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.applications, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        /* eslint-disable */console.log(...oo_oo(`a53a451b_4`,response.data));\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        /* eslint-disable */console.log(...oo_oo(`a53a451b_5`,err.response.data));\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Applications</Typography>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs\r\n        direction=\"column\"\r\n        style={{ width: \"100%\" }}\r\n        alignItems=\"stretch\"\r\n        justify=\"center\"\r\n      >\r\n        {applications.length > 0 ? (\r\n          applications.map((obj) => (\r\n            <Grid item>\r\n              <ApplicationTile application={obj} />\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n            No Applications Found\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Applications;\r\n/* eslint-disable */;function oo_cm(){try{return (0,eval)(\"globalThis._console_ninja\") || (0,eval)(\"/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0x362114=_0x1e59;(function(_0x126ff6,_0x2f9fb9){var _0x3cf7f5=_0x1e59,_0x3212b5=_0x126ff6();while(!![]){try{var _0x55adfd=parseInt(_0x3cf7f5(0x1b1))/0x1+parseInt(_0x3cf7f5(0x192))/0x2*(parseInt(_0x3cf7f5(0xf2))/0x3)+-parseInt(_0x3cf7f5(0xf1))/0x4+-parseInt(_0x3cf7f5(0xf6))/0x5*(parseInt(_0x3cf7f5(0xef))/0x6)+-parseInt(_0x3cf7f5(0xeb))/0x7+parseInt(_0x3cf7f5(0x146))/0x8+parseInt(_0x3cf7f5(0x13b))/0x9;if(_0x55adfd===_0x2f9fb9)break;else _0x3212b5['push'](_0x3212b5['shift']());}catch(_0xfd43b8){_0x3212b5['push'](_0x3212b5['shift']());}}}(_0x3b04,0xe19e8));function _0x1e59(_0x3311ae,_0x1de95b){var _0x3b041e=_0x3b04();return _0x1e59=function(_0x1e5914,_0x5b36f4){_0x1e5914=_0x1e5914-0xe8;var _0x1b05c7=_0x3b041e[_0x1e5914];return _0x1b05c7;},_0x1e59(_0x3311ae,_0x1de95b);}var ue=Object['create'],te=Object[_0x362114(0x11c)],he=Object[_0x362114(0x17a)],le=Object['getOwnPropertyNames'],fe=Object['getPrototypeOf'],_e=Object[_0x362114(0x1aa)][_0x362114(0x170)],pe=(_0x253a3e,_0x321adb,_0x559a40,_0x41b9e3)=>{var _0x526a67=_0x362114;if(_0x321adb&&typeof _0x321adb==_0x526a67(0x107)||typeof _0x321adb==_0x526a67(0xe8)){for(let _0x5a7218 of le(_0x321adb))!_e['call'](_0x253a3e,_0x5a7218)&&_0x5a7218!==_0x559a40&&te(_0x253a3e,_0x5a7218,{'get':()=>_0x321adb[_0x5a7218],'enumerable':!(_0x41b9e3=he(_0x321adb,_0x5a7218))||_0x41b9e3[_0x526a67(0x19b)]});}return _0x253a3e;},ne=(_0x178c4f,_0xa8ee64,_0x2993d6)=>(_0x2993d6=_0x178c4f!=null?ue(fe(_0x178c4f)):{},pe(_0xa8ee64||!_0x178c4f||!_0x178c4f[_0x362114(0x173)]?te(_0x2993d6,_0x362114(0x10b),{'value':_0x178c4f,'enumerable':!0x0}):_0x2993d6,_0x178c4f)),Q=class{constructor(_0xd8cc62,_0xa2c024,_0x5c0231,_0x3dda39){var _0xbfba63=_0x362114;this[_0xbfba63(0x1bd)]=_0xd8cc62,this[_0xbfba63(0x120)]=_0xa2c024,this[_0xbfba63(0x127)]=_0x5c0231,this[_0xbfba63(0x165)]=_0x3dda39,this[_0xbfba63(0x149)]=!0x0,this[_0xbfba63(0x135)]=!0x0,this['_connected']=!0x1,this[_0xbfba63(0x10c)]=!0x1,this[_0xbfba63(0x197)]=!!this[_0xbfba63(0x1bd)][_0xbfba63(0x17f)],this[_0xbfba63(0x189)]=null,this['_connectAttemptCount']=0x0,this[_0xbfba63(0x1b4)]=0x14,this[_0xbfba63(0xee)]=this[_0xbfba63(0x197)]?_0xbfba63(0xf7):_0xbfba63(0x172);}async[_0x362114(0x1ac)](){var _0x23892b=_0x362114;if(this[_0x23892b(0x189)])return this[_0x23892b(0x189)];let _0x1691b5;if(this['_inBrowser'])_0x1691b5=this[_0x23892b(0x1bd)][_0x23892b(0x17f)];else{if(this[_0x23892b(0x1bd)][_0x23892b(0x183)]?.[_0x23892b(0x1c4)])_0x1691b5=this[_0x23892b(0x1bd)][_0x23892b(0x183)]?.[_0x23892b(0x1c4)];else try{let _0x43f34c=await import(_0x23892b(0x14c));_0x1691b5=(await import((await import(_0x23892b(0x195)))[_0x23892b(0x1b2)](_0x43f34c[_0x23892b(0x160)](this[_0x23892b(0x165)],_0x23892b(0x179)))[_0x23892b(0x132)]()))[_0x23892b(0x10b)];}catch{try{_0x1691b5=require(require(_0x23892b(0x14c))[_0x23892b(0x160)](this[_0x23892b(0x165)],'ws'));}catch{throw new Error(_0x23892b(0x12c));}}}return this[_0x23892b(0x189)]=_0x1691b5,_0x1691b5;}[_0x362114(0x1bc)](){var _0x4a0de0=_0x362114;this[_0x4a0de0(0x10c)]||this['_connected']||this[_0x4a0de0(0xfc)]>=this[_0x4a0de0(0x1b4)]||(this[_0x4a0de0(0x135)]=!0x1,this[_0x4a0de0(0x10c)]=!0x0,this['_connectAttemptCount']++,this[_0x4a0de0(0x109)]=new Promise((_0x37f9cf,_0x1f87df)=>{var _0x41d06f=_0x4a0de0;this[_0x41d06f(0x1ac)]()[_0x41d06f(0x186)](_0x43bdb1=>{var _0x1630f2=_0x41d06f;let _0x105798=new _0x43bdb1('ws://'+this[_0x1630f2(0x120)]+':'+this[_0x1630f2(0x127)]);_0x105798[_0x1630f2(0x19e)]=()=>{var _0x5e355c=_0x1630f2;this[_0x5e355c(0x149)]=!0x1,this[_0x5e355c(0x144)](_0x105798),this['_attemptToReconnectShortly'](),_0x1f87df(new Error('logger\\\\x20websocket\\\\x20error'));},_0x105798[_0x1630f2(0x1a3)]=()=>{var _0x31d53b=_0x1630f2;this['_inBrowser']||_0x105798[_0x31d53b(0x123)]&&_0x105798[_0x31d53b(0x123)][_0x31d53b(0x18e)]&&_0x105798[_0x31d53b(0x123)][_0x31d53b(0x18e)](),_0x37f9cf(_0x105798);},_0x105798[_0x1630f2(0x150)]=()=>{var _0x86dfa1=_0x1630f2;this[_0x86dfa1(0x135)]=!0x0,this[_0x86dfa1(0x144)](_0x105798),this['_attemptToReconnectShortly']();},_0x105798[_0x1630f2(0x19d)]=_0x47fe6a=>{var _0x3f24a1=_0x1630f2;try{_0x47fe6a&&_0x47fe6a[_0x3f24a1(0x1c3)]&&this[_0x3f24a1(0x197)]&&JSON[_0x3f24a1(0x133)](_0x47fe6a[_0x3f24a1(0x1c3)])[_0x3f24a1(0x17b)]===_0x3f24a1(0x1b9)&&this[_0x3f24a1(0x1bd)][_0x3f24a1(0x16d)]['reload']();}catch{}};})[_0x41d06f(0x186)](_0x4da13e=>(this[_0x41d06f(0xff)]=!0x0,this['_connecting']=!0x1,this[_0x41d06f(0x135)]=!0x1,this['_allowedToSend']=!0x0,this[_0x41d06f(0xfc)]=0x0,_0x4da13e))['catch'](_0x2c619e=>(this[_0x41d06f(0xff)]=!0x1,this[_0x41d06f(0x10c)]=!0x1,_0x1f87df(new Error(_0x41d06f(0x157)+(_0x2c619e&&_0x2c619e['message'])))));}));}[_0x362114(0x144)](_0x380b92){var _0x4b1362=_0x362114;this[_0x4b1362(0xff)]=!0x1,this[_0x4b1362(0x10c)]=!0x1;try{_0x380b92['onclose']=null,_0x380b92[_0x4b1362(0x19e)]=null,_0x380b92['onopen']=null;}catch{}try{_0x380b92[_0x4b1362(0x124)]<0x2&&_0x380b92[_0x4b1362(0x154)]();}catch{}}[_0x362114(0x1ab)](){var _0x3e9f84=_0x362114;clearTimeout(this['_reconnectTimeout']),!(this[_0x3e9f84(0xfc)]>=this[_0x3e9f84(0x1b4)])&&(this[_0x3e9f84(0x15c)]=setTimeout(()=>{var _0x2032de=_0x3e9f84;this['_connected']||this['_connecting']||(this[_0x2032de(0x1bc)](),this[_0x2032de(0x109)]?.[_0x2032de(0x116)](()=>this[_0x2032de(0x1ab)]()));},0x1f4),this[_0x3e9f84(0x15c)][_0x3e9f84(0x18e)]&&this['_reconnectTimeout'][_0x3e9f84(0x18e)]());}async[_0x362114(0x1ba)](_0x4783c8){var _0x5eee02=_0x362114;try{if(!this['_allowedToSend'])return;this[_0x5eee02(0x135)]&&this[_0x5eee02(0x1bc)](),(await this['_ws'])[_0x5eee02(0x1ba)](JSON[_0x5eee02(0x151)](_0x4783c8));}catch(_0x434e0b){console['warn'](this['_sendErrorMessage']+':\\\\x20'+(_0x434e0b&&_0x434e0b[_0x5eee02(0x147)])),this[_0x5eee02(0x149)]=!0x1,this[_0x5eee02(0x1ab)]();}}};function V(_0x1e3f90,_0x297aba,_0x45b9d7,_0x4043ce,_0x1e7241){var _0x2ee86f=_0x362114;let _0x53eded=_0x45b9d7[_0x2ee86f(0x11d)](',')[_0x2ee86f(0x129)](_0x342c2c=>{var _0x1f06d3=_0x2ee86f;try{_0x1e3f90[_0x1f06d3(0x164)]||((_0x1e7241===_0x1f06d3(0x15d)||_0x1e7241===_0x1f06d3(0x114))&&(_0x1e7241+=_0x1e3f90[_0x1f06d3(0x183)]?.[_0x1f06d3(0x121)]?.[_0x1f06d3(0x1c6)]?_0x1f06d3(0x16b):_0x1f06d3(0x17d)),_0x1e3f90[_0x1f06d3(0x164)]={'id':+new Date(),'tool':_0x1e7241});let _0x495a7e=new Q(_0x1e3f90,_0x297aba,_0x342c2c,_0x4043ce);return _0x495a7e[_0x1f06d3(0x1ba)][_0x1f06d3(0x119)](_0x495a7e);}catch(_0x21764e){return console[_0x1f06d3(0x185)](_0x1f06d3(0x1a6),_0x21764e&&_0x21764e[_0x1f06d3(0x147)]),()=>{};}});return _0x73258=>_0x53eded[_0x2ee86f(0x178)](_0x22956f=>_0x22956f(_0x73258));}function H(_0xd6da49){var _0x161d10=_0x362114;let _0x112a6f=function(_0x21f777,_0x478c72){return _0x478c72-_0x21f777;},_0x45c0db;if(_0xd6da49[_0x161d10(0x115)])_0x45c0db=function(){var _0x1b6edc=_0x161d10;return _0xd6da49[_0x1b6edc(0x115)]['now']();};else{if(_0xd6da49[_0x161d10(0x183)]&&_0xd6da49['process']['hrtime'])_0x45c0db=function(){var _0x29d79e=_0x161d10;return _0xd6da49[_0x29d79e(0x183)]['hrtime']();},_0x112a6f=function(_0x1884fb,_0x6a1e6a){return 0x3e8*(_0x6a1e6a[0x0]-_0x1884fb[0x0])+(_0x6a1e6a[0x1]-_0x1884fb[0x1])/0xf4240;};else try{let {performance:_0x2d0ad7}=require(_0x161d10(0x1a5));_0x45c0db=function(){var _0x406281=_0x161d10;return _0x2d0ad7[_0x406281(0x1c7)]();};}catch{_0x45c0db=function(){return+new Date();};}}return{'elapsed':_0x112a6f,'timeStamp':_0x45c0db,'now':()=>Date[_0x161d10(0x1c7)]()};}function _0x3b04(){var _0x3b6a6b=['now','disabledTrace','function','root_exp_id','_addProperty','5598439RrtwSf','autoExpandPropertyCount','strLength','_sendErrorMessage','237270jlBwLL','_dateToString','1355528XRlJvN','3mhBALd','boolean','elements','elapsed','25qSkJhS','Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20refreshing\\\\x20the\\\\x20page\\\\x20may\\\\x20help','_type','_additionalMetadata','rootExpression','valueOf','_connectAttemptCount','sortProps','substr','_connected','_sortProps','_HTMLAllCollection','_isPrimitiveWrapperType','string','reduceLimits','serialize','hits','object','getOwnPropertySymbols','_ws','positiveInfinity','default','_connecting','log','negativeInfinity','_setNodeExpandableState',\\\"c:\\\\\\\\Users\\\\\\\\RAHUL\\\\\\\\.vscode\\\\\\\\extensions\\\\\\\\wallabyjs.console-ninja-0.0.125\\\\\\\\node_modules\\\",'Symbol','count','level','remix','performance','catch','_capIfString','stackTraceLimit','bind','_setNodeExpressionPath','_numberRegExp','defineProperty','split','match','root_exp','host','versions','sort','_socket','readyState','isArray','_p_','port','Set','map','_Symbol','depth','failed\\\\x20to\\\\x20find\\\\x20and\\\\x20load\\\\x20WebSocket','negativeZero','indexOf','number','autoExpandPreviousObjects','autoExpand','toString','parse','trace','_allowedToConnectOnSend','_propertyAccessor','cappedProps','argumentResolutionError','Boolean','concat','21510rOGlrd','_isUndefined','array','autoExpandMaxDepth','replace','_getOwnPropertySymbols','length','_propertyName','error','_disposeWebsocket','RegExp','3384nkeJQs','message','nuxt','_allowedToSend','capped','_p_name','path','setter','HTMLAllCollection','_console_ninja','onclose','stringify','isExpressionToEvaluate','_addObjectProperty','close','date','undefined','failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host:\\\\x20','current','_blacklistedProperty','getOwnPropertyNames','Number','_reconnectTimeout','next.js','_hasMapOnItsPath','[object\\\\x20Map]','join','includes','parent','expressionsToEvaluate','_console_ninja_session','nodeModules','pop','totalStrLength','_consoleNinjaAllowedToStart','1685108772066','_getOwnPropertyNames','\\\\x20server','push','location','Buffer','allStrLength','hasOwnProperty','console','Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20restarting\\\\x20the\\\\x20process\\\\x20may\\\\x20help','__es'+'Module','_treeNodePropertiesAfterFullValue','index','_regExpToString','hostname','forEach','ws/index.js','getOwnPropertyDescriptor','method','POSITIVE_INFINITY','\\\\x20browser','_p_length','WebSocket','_treeNodePropertiesBeforeFullValue','_isMap','_setNodeLabel','process','_addFunctionsNode','warn','then','name','bigint','_WebSocketClass','unknown','...','_setNodePermissions','funcName','unref','null','Error','symbol','3466186hMgNym','_processTreeNodeResult','127.0.0.1','url','_setNodeQueryPath','_inBrowser','String','_isPrimitiveType','[object\\\\x20Array]','enumerable','_objectToString','onmessage','onerror','_quotedRegExp','autoExpandLimit','set','resolveGetters','onopen','constructor','perf_hooks','logger\\\\x20failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host','_isArray','_setNodeId','_property','prototype','_attemptToReconnectShortly','getWebSocketClass','_undefined','type','_hasSetOnItsPath','value','524614unPoxd','pathToFileURL','_getOwnPropertyDescriptor','_maxConnectAttemptCount',[\\\"localhost\\\",\\\"127.0.0.1\\\",\\\"example.cypress.io\\\",\\\"DESKTOP-Q8CHRNP\\\",\\\"192.168.29.86\\\"],'_keyStrRegExp','call','_isNegativeZero','reload','send','props','_connectToHostNow','global','Map','_cleanNode','_addLoadNode','time','[object\\\\x20Date]','data','_WebSocket','slice','node'];_0x3b04=function(){return _0x3b6a6b;};return _0x3b04();}function X(_0x4020ef,_0x51ced0,_0x27d872){var _0xf677ae=_0x362114;if(_0x4020ef[_0xf677ae(0x168)]!==void 0x0)return _0x4020ef[_0xf677ae(0x168)];let _0x3db0be=_0x4020ef[_0xf677ae(0x183)]?.['versions']?.[_0xf677ae(0x1c6)];return _0x3db0be&&_0x27d872===_0xf677ae(0x148)?_0x4020ef[_0xf677ae(0x168)]=!0x1:_0x4020ef[_0xf677ae(0x168)]=_0x3db0be||!_0x51ced0||_0x4020ef[_0xf677ae(0x16d)]?.[_0xf677ae(0x177)]&&_0x51ced0[_0xf677ae(0x161)](_0x4020ef[_0xf677ae(0x16d)][_0xf677ae(0x177)]),_0x4020ef[_0xf677ae(0x168)];}((_0x5a79f4,_0x40fc8f,_0x477341,_0x3f6810,_0x43be50,_0x394eca,_0x454756,_0x599f27,_0x2932ea)=>{var _0x582a5f=_0x362114;if(_0x5a79f4['_console_ninja'])return _0x5a79f4[_0x582a5f(0x14f)];if(!X(_0x5a79f4,_0x599f27,_0x43be50))return _0x5a79f4['_console_ninja']={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x5a79f4[_0x582a5f(0x14f)];let _0x481166={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0xc7aa2a={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2},_0x4c293b=H(_0x5a79f4),_0x5b7ec7=_0x4c293b[_0x582a5f(0xf5)],_0xb8c436=_0x4c293b['timeStamp'],_0x204500=_0x4c293b[_0x582a5f(0x1c7)],_0x1a495c={'hits':{},'ts':{}},_0x2e7300=_0x3b78f8=>{_0x1a495c['ts'][_0x3b78f8]=_0xb8c436();},_0x397e7a=(_0x5ec5d7,_0x588071)=>{var _0x5cf8c0=_0x582a5f;let _0x3796f9=_0x1a495c['ts'][_0x588071];if(delete _0x1a495c['ts'][_0x588071],_0x3796f9){let _0x52caa1=_0x5b7ec7(_0x3796f9,_0xb8c436());_0x20e8d2(_0x8784b0(_0x5cf8c0(0x1c1),_0x5ec5d7,_0x204500(),_0x34b4ec,[_0x52caa1],_0x588071));}},_0x2586d2=_0x352b38=>_0x33f1ea=>{var _0x158c4c=_0x582a5f;try{_0x2e7300(_0x33f1ea),_0x352b38(_0x33f1ea);}finally{_0x5a79f4[_0x158c4c(0x171)][_0x158c4c(0x1c1)]=_0x352b38;}},_0x586d19=_0x1ae672=>_0x20043a=>{var _0x1c731e=_0x582a5f;try{let [_0x353353,_0x53dc62]=_0x20043a['split'](':logPointId:');_0x397e7a(_0x53dc62,_0x353353),_0x1ae672(_0x353353);}finally{_0x5a79f4[_0x1c731e(0x171)]['timeEnd']=_0x1ae672;}};_0x5a79f4['_console_ninja']={'consoleLog':(_0x3e38bf,_0xfe0330)=>{var _0x53276b=_0x582a5f;_0x5a79f4[_0x53276b(0x171)][_0x53276b(0x10d)][_0x53276b(0x187)]!=='disabledLog'&&_0x20e8d2(_0x8784b0(_0x53276b(0x10d),_0x3e38bf,_0x204500(),_0x34b4ec,_0xfe0330));},'consoleTrace':(_0x479681,_0x25392e)=>{var _0x545a93=_0x582a5f;_0x5a79f4[_0x545a93(0x171)][_0x545a93(0x10d)][_0x545a93(0x187)]!==_0x545a93(0x1c8)&&_0x20e8d2(_0x8784b0(_0x545a93(0x134),_0x479681,_0x204500(),_0x34b4ec,_0x25392e));},'consoleTime':()=>{var _0x19beea=_0x582a5f;_0x5a79f4[_0x19beea(0x171)]['time']=_0x2586d2(_0x5a79f4['console'][_0x19beea(0x1c1)]);},'consoleTimeEnd':()=>{var _0x1d28de=_0x582a5f;_0x5a79f4[_0x1d28de(0x171)]['timeEnd']=_0x586d19(_0x5a79f4[_0x1d28de(0x171)]['timeEnd']);},'autoLog':(_0x581ed3,_0x4be935)=>{var _0x503037=_0x582a5f;_0x20e8d2(_0x8784b0(_0x503037(0x10d),_0x4be935,_0x204500(),_0x34b4ec,[_0x581ed3]));},'autoTrace':(_0x3fe5e1,_0x46f74c)=>{var _0x5ae89a=_0x582a5f;_0x20e8d2(_0x8784b0(_0x5ae89a(0x134),_0x46f74c,_0x204500(),_0x34b4ec,[_0x3fe5e1]));},'autoTime':(_0x453a85,_0x1770e3,_0x14155e)=>{_0x2e7300(_0x14155e);},'autoTimeEnd':(_0x1ee798,_0x4489db,_0x3493b5)=>{_0x397e7a(_0x4489db,_0x3493b5);}};let _0x20e8d2=V(_0x5a79f4,_0x40fc8f,_0x477341,_0x3f6810,_0x43be50),_0x34b4ec=_0x5a79f4['_console_ninja_session'];class _0x1ed8a8{constructor(){var _0x35466c=_0x582a5f;this[_0x35466c(0x1b6)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\\\xA0-\\\\uFFFF][_$a-zA-Z0-9\\\\xA0-\\\\uFFFF]*$/,this[_0x35466c(0x11b)]=/^(0|[1-9][0-9]*)$/,this['_quotedRegExp']=/'([^\\\\\\\\']|\\\\\\\\')*'/,this[_0x35466c(0x1ad)]=_0x5a79f4['undefined'],this[_0x35466c(0x101)]=_0x5a79f4[_0x35466c(0x14e)],this[_0x35466c(0x1b3)]=Object[_0x35466c(0x17a)],this['_getOwnPropertyNames']=Object[_0x35466c(0x15a)],this['_Symbol']=_0x5a79f4[_0x35466c(0x111)],this[_0x35466c(0x176)]=RegExp[_0x35466c(0x1aa)][_0x35466c(0x132)],this[_0x35466c(0xf0)]=Date[_0x35466c(0x1aa)][_0x35466c(0x132)];}[_0x582a5f(0x105)](_0x684b73,_0x40b08d,_0x2084ac,_0x424268){var _0x56b1ee=_0x582a5f,_0x18fc0b=this,_0x4dfc52=_0x2084ac[_0x56b1ee(0x131)];function _0x3bc4ff(_0x531d70,_0x482dba,_0x335174){var _0xea88b=_0x56b1ee;_0x482dba[_0xea88b(0x1ae)]=_0xea88b(0x18a),_0x482dba[_0xea88b(0x143)]=_0x531d70[_0xea88b(0x147)],_0x2de3a8=_0x335174[_0xea88b(0x1c6)][_0xea88b(0x158)],_0x335174[_0xea88b(0x1c6)][_0xea88b(0x158)]=_0x482dba,_0x18fc0b[_0xea88b(0x180)](_0x482dba,_0x335174);}if(_0x40b08d&&_0x40b08d[_0x56b1ee(0x138)])_0x3bc4ff(_0x40b08d,_0x684b73,_0x2084ac);else try{_0x2084ac[_0x56b1ee(0x113)]++,_0x2084ac[_0x56b1ee(0x131)]&&_0x2084ac[_0x56b1ee(0x130)][_0x56b1ee(0x16c)](_0x40b08d);var _0x53289c,_0x56dcaa,_0x3f1bac,_0x2c5390,_0x587de7=[],_0x27826c=[],_0x538ce8,_0x509de2=this['_type'](_0x40b08d),_0x4ebf4a=_0x509de2===_0x56b1ee(0x13d),_0x17b031=!0x1,_0x54de89=_0x509de2==='function',_0x12042c=this[_0x56b1ee(0x199)](_0x509de2),_0x4d03e1=this[_0x56b1ee(0x102)](_0x509de2),_0x129831=_0x12042c||_0x4d03e1,_0x16ba8c={},_0xa9b097=0x0,_0x43366c=!0x1,_0x2de3a8,_0xe0b961=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x2084ac[_0x56b1ee(0x12b)]){if(_0x4ebf4a){if(_0x56dcaa=_0x40b08d['length'],_0x56dcaa>_0x2084ac[_0x56b1ee(0xf4)]){for(_0x3f1bac=0x0,_0x2c5390=_0x2084ac[_0x56b1ee(0xf4)],_0x53289c=_0x3f1bac;_0x53289c<_0x2c5390;_0x53289c++)_0x27826c[_0x56b1ee(0x16c)](_0x18fc0b[_0x56b1ee(0xea)](_0x587de7,_0x40b08d,_0x509de2,_0x53289c,_0x2084ac));_0x684b73['cappedElements']=!0x0;}else{for(_0x3f1bac=0x0,_0x2c5390=_0x56dcaa,_0x53289c=_0x3f1bac;_0x53289c<_0x2c5390;_0x53289c++)_0x27826c[_0x56b1ee(0x16c)](_0x18fc0b[_0x56b1ee(0xea)](_0x587de7,_0x40b08d,_0x509de2,_0x53289c,_0x2084ac));}_0x2084ac[_0x56b1ee(0xec)]+=_0x27826c['length'];}if(!(_0x509de2===_0x56b1ee(0x18f)||_0x509de2==='undefined')&&!_0x12042c&&_0x509de2!=='String'&&_0x509de2!==_0x56b1ee(0x16e)&&_0x509de2!==_0x56b1ee(0x188)){var _0x1f65bc=_0x424268[_0x56b1ee(0x1bb)]||_0x2084ac[_0x56b1ee(0x1bb)];if(this['_isSet'](_0x40b08d)?(_0x53289c=0x0,_0x40b08d[_0x56b1ee(0x178)](function(_0x367cec){var _0x1936cd=_0x56b1ee;if(_0xa9b097++,_0x2084ac['autoExpandPropertyCount']++,_0xa9b097>_0x1f65bc){_0x43366c=!0x0;return;}if(!_0x2084ac[_0x1936cd(0x152)]&&_0x2084ac['autoExpand']&&_0x2084ac[_0x1936cd(0xec)]>_0x2084ac['autoExpandLimit']){_0x43366c=!0x0;return;}_0x27826c[_0x1936cd(0x16c)](_0x18fc0b['_addProperty'](_0x587de7,_0x40b08d,_0x1936cd(0x128),_0x53289c++,_0x2084ac,function(_0x599f7b){return function(){return _0x599f7b;};}(_0x367cec)));})):this[_0x56b1ee(0x181)](_0x40b08d)&&_0x40b08d[_0x56b1ee(0x178)](function(_0x56786e,_0x4c5f08){var _0x5ac097=_0x56b1ee;if(_0xa9b097++,_0x2084ac[_0x5ac097(0xec)]++,_0xa9b097>_0x1f65bc){_0x43366c=!0x0;return;}if(!_0x2084ac[_0x5ac097(0x152)]&&_0x2084ac['autoExpand']&&_0x2084ac[_0x5ac097(0xec)]>_0x2084ac['autoExpandLimit']){_0x43366c=!0x0;return;}var _0x1adddf=_0x4c5f08[_0x5ac097(0x132)]();_0x1adddf[_0x5ac097(0x141)]>0x64&&(_0x1adddf=_0x1adddf[_0x5ac097(0x1c5)](0x0,0x64)+_0x5ac097(0x18b)),_0x27826c['push'](_0x18fc0b[_0x5ac097(0xea)](_0x587de7,_0x40b08d,_0x5ac097(0x1be),_0x1adddf,_0x2084ac,function(_0x4120a8){return function(){return _0x4120a8;};}(_0x56786e)));}),!_0x17b031){try{for(_0x538ce8 in _0x40b08d)if(!(_0x4ebf4a&&_0xe0b961['test'](_0x538ce8))&&!this['_blacklistedProperty'](_0x40b08d,_0x538ce8,_0x2084ac)){if(_0xa9b097++,_0x2084ac[_0x56b1ee(0xec)]++,_0xa9b097>_0x1f65bc){_0x43366c=!0x0;break;}if(!_0x2084ac[_0x56b1ee(0x152)]&&_0x2084ac[_0x56b1ee(0x131)]&&_0x2084ac[_0x56b1ee(0xec)]>_0x2084ac[_0x56b1ee(0x1a0)]){_0x43366c=!0x0;break;}_0x27826c[_0x56b1ee(0x16c)](_0x18fc0b[_0x56b1ee(0x153)](_0x587de7,_0x16ba8c,_0x40b08d,_0x509de2,_0x538ce8,_0x2084ac));}}catch{}if(_0x16ba8c[_0x56b1ee(0x17e)]=!0x0,_0x54de89&&(_0x16ba8c[_0x56b1ee(0x14b)]=!0x0),!_0x43366c){var _0x1aa050=[][_0x56b1ee(0x13a)](this[_0x56b1ee(0x16a)](_0x40b08d))[_0x56b1ee(0x13a)](this['_getOwnPropertySymbols'](_0x40b08d));for(_0x53289c=0x0,_0x56dcaa=_0x1aa050[_0x56b1ee(0x141)];_0x53289c<_0x56dcaa;_0x53289c++)if(_0x538ce8=_0x1aa050[_0x53289c],!(_0x4ebf4a&&_0xe0b961['test'](_0x538ce8[_0x56b1ee(0x132)]()))&&!this[_0x56b1ee(0x159)](_0x40b08d,_0x538ce8,_0x2084ac)&&!_0x16ba8c['_p_'+_0x538ce8[_0x56b1ee(0x132)]()]){if(_0xa9b097++,_0x2084ac[_0x56b1ee(0xec)]++,_0xa9b097>_0x1f65bc){_0x43366c=!0x0;break;}if(!_0x2084ac['isExpressionToEvaluate']&&_0x2084ac[_0x56b1ee(0x131)]&&_0x2084ac[_0x56b1ee(0xec)]>_0x2084ac[_0x56b1ee(0x1a0)]){_0x43366c=!0x0;break;}_0x27826c[_0x56b1ee(0x16c)](_0x18fc0b[_0x56b1ee(0x153)](_0x587de7,_0x16ba8c,_0x40b08d,_0x509de2,_0x538ce8,_0x2084ac));}}}}}if(_0x684b73['type']=_0x509de2,_0x129831?(_0x684b73[_0x56b1ee(0x1b0)]=_0x40b08d[_0x56b1ee(0xfb)](),this[_0x56b1ee(0x117)](_0x509de2,_0x684b73,_0x2084ac,_0x424268)):_0x509de2==='date'?_0x684b73['value']=this[_0x56b1ee(0xf0)][_0x56b1ee(0x1b7)](_0x40b08d):_0x509de2===_0x56b1ee(0x145)?_0x684b73[_0x56b1ee(0x1b0)]=this[_0x56b1ee(0x176)][_0x56b1ee(0x1b7)](_0x40b08d):_0x509de2===_0x56b1ee(0x191)&&this[_0x56b1ee(0x12a)]?_0x684b73[_0x56b1ee(0x1b0)]=this[_0x56b1ee(0x12a)][_0x56b1ee(0x1aa)][_0x56b1ee(0x132)][_0x56b1ee(0x1b7)](_0x40b08d):!_0x2084ac[_0x56b1ee(0x12b)]&&!(_0x509de2==='null'||_0x509de2==='undefined')&&(delete _0x684b73['value'],_0x684b73['capped']=!0x0),_0x43366c&&(_0x684b73[_0x56b1ee(0x137)]=!0x0),_0x2de3a8=_0x2084ac['node'][_0x56b1ee(0x158)],_0x2084ac[_0x56b1ee(0x1c6)][_0x56b1ee(0x158)]=_0x684b73,this['_treeNodePropertiesBeforeFullValue'](_0x684b73,_0x2084ac),_0x27826c[_0x56b1ee(0x141)]){for(_0x53289c=0x0,_0x56dcaa=_0x27826c['length'];_0x53289c<_0x56dcaa;_0x53289c++)_0x27826c[_0x53289c](_0x53289c);}_0x587de7[_0x56b1ee(0x141)]&&(_0x684b73['props']=_0x587de7);}catch(_0x495420){_0x3bc4ff(_0x495420,_0x684b73,_0x2084ac);}return this[_0x56b1ee(0xf9)](_0x40b08d,_0x684b73),this['_treeNodePropertiesAfterFullValue'](_0x684b73,_0x2084ac),_0x2084ac[_0x56b1ee(0x1c6)][_0x56b1ee(0x158)]=_0x2de3a8,_0x2084ac[_0x56b1ee(0x113)]--,_0x2084ac['autoExpand']=_0x4dfc52,_0x2084ac[_0x56b1ee(0x131)]&&_0x2084ac[_0x56b1ee(0x130)][_0x56b1ee(0x166)](),_0x684b73;}[_0x582a5f(0x140)](_0xfe0b88){var _0xcd569d=_0x582a5f;return Object[_0xcd569d(0x108)]?Object[_0xcd569d(0x108)](_0xfe0b88):[];}['_isSet'](_0x52efa4){var _0x4fadc8=_0x582a5f;return!!(_0x52efa4&&_0x5a79f4[_0x4fadc8(0x128)]&&this[_0x4fadc8(0x19c)](_0x52efa4)==='[object\\\\x20Set]'&&_0x52efa4[_0x4fadc8(0x178)]);}[_0x582a5f(0x159)](_0x5a7792,_0x258281,_0x2436a6){var _0x7d9713=_0x582a5f;return _0x2436a6['noFunctions']?typeof _0x5a7792[_0x258281]==_0x7d9713(0xe8):!0x1;}['_type'](_0x3f4ed7){var _0x4ed605=_0x582a5f,_0x3a5a2f='';return _0x3a5a2f=typeof _0x3f4ed7,_0x3a5a2f===_0x4ed605(0x107)?this[_0x4ed605(0x19c)](_0x3f4ed7)==='[object\\\\x20Array]'?_0x3a5a2f=_0x4ed605(0x13d):this[_0x4ed605(0x19c)](_0x3f4ed7)===_0x4ed605(0x1c2)?_0x3a5a2f=_0x4ed605(0x155):_0x3f4ed7===null?_0x3a5a2f='null':_0x3f4ed7[_0x4ed605(0x1a4)]&&(_0x3a5a2f=_0x3f4ed7[_0x4ed605(0x1a4)]['name']||_0x3a5a2f):_0x3a5a2f===_0x4ed605(0x156)&&this[_0x4ed605(0x101)]&&_0x3f4ed7 instanceof this[_0x4ed605(0x101)]&&(_0x3a5a2f=_0x4ed605(0x14e)),_0x3a5a2f;}[_0x582a5f(0x19c)](_0x5643ee){var _0x2b8d5c=_0x582a5f;return Object[_0x2b8d5c(0x1aa)][_0x2b8d5c(0x132)][_0x2b8d5c(0x1b7)](_0x5643ee);}[_0x582a5f(0x199)](_0xe02f7f){var _0x1451d3=_0x582a5f;return _0xe02f7f===_0x1451d3(0xf3)||_0xe02f7f===_0x1451d3(0x103)||_0xe02f7f===_0x1451d3(0x12f);}['_isPrimitiveWrapperType'](_0x828bbe){var _0x1e631f=_0x582a5f;return _0x828bbe===_0x1e631f(0x139)||_0x828bbe===_0x1e631f(0x198)||_0x828bbe===_0x1e631f(0x15b);}[_0x582a5f(0xea)](_0x3b9ab7,_0x5d3eb0,_0x35fcbd,_0x17bd88,_0x2e756a,_0x227602){var _0x2d276=this;return function(_0x44ad5b){var _0x190d8f=_0x1e59,_0x1f4950=_0x2e756a[_0x190d8f(0x1c6)][_0x190d8f(0x158)],_0x7960f=_0x2e756a[_0x190d8f(0x1c6)][_0x190d8f(0x175)],_0x4f3ec7=_0x2e756a[_0x190d8f(0x1c6)][_0x190d8f(0x162)];_0x2e756a[_0x190d8f(0x1c6)][_0x190d8f(0x162)]=_0x1f4950,_0x2e756a[_0x190d8f(0x1c6)][_0x190d8f(0x175)]=typeof _0x17bd88==_0x190d8f(0x12f)?_0x17bd88:_0x44ad5b,_0x3b9ab7[_0x190d8f(0x16c)](_0x2d276[_0x190d8f(0x1a9)](_0x5d3eb0,_0x35fcbd,_0x17bd88,_0x2e756a,_0x227602)),_0x2e756a['node']['parent']=_0x4f3ec7,_0x2e756a['node'][_0x190d8f(0x175)]=_0x7960f;};}['_addObjectProperty'](_0x130244,_0xd9c109,_0x319860,_0xd0e4c6,_0x62b55f,_0x564e16,_0x340cf5){var _0x575f3d=_0x582a5f,_0x15b0aa=this;return _0xd9c109[_0x575f3d(0x126)+_0x62b55f[_0x575f3d(0x132)]()]=!0x0,function(_0x275534){var _0x400cfd=_0x575f3d,_0x2e4c09=_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x158)],_0x5a4131=_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x175)],_0x350a6d=_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x162)];_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x162)]=_0x2e4c09,_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x175)]=_0x275534,_0x130244[_0x400cfd(0x16c)](_0x15b0aa[_0x400cfd(0x1a9)](_0x319860,_0xd0e4c6,_0x62b55f,_0x564e16,_0x340cf5)),_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x162)]=_0x350a6d,_0x564e16['node']['index']=_0x5a4131;};}['_property'](_0x1ba119,_0x349be6,_0x25f612,_0x35ed9a,_0x2f04ed){var _0x1d18b5=_0x582a5f,_0x39dad5=this;_0x2f04ed||(_0x2f04ed=function(_0xbf1190,_0x15fcf1){return _0xbf1190[_0x15fcf1];});var _0x4f2f6f=_0x25f612['toString'](),_0x2533f6=_0x35ed9a[_0x1d18b5(0x163)]||{},_0x1de289=_0x35ed9a[_0x1d18b5(0x12b)],_0x2097cc=_0x35ed9a[_0x1d18b5(0x152)];try{var _0x45bd9c=this[_0x1d18b5(0x181)](_0x1ba119),_0x5316f6=_0x4f2f6f;_0x45bd9c&&_0x5316f6[0x0]==='\\\\x27'&&(_0x5316f6=_0x5316f6[_0x1d18b5(0xfe)](0x1,_0x5316f6[_0x1d18b5(0x141)]-0x2));var _0x1f49be=_0x35ed9a[_0x1d18b5(0x163)]=_0x2533f6[_0x1d18b5(0x126)+_0x5316f6];_0x1f49be&&(_0x35ed9a['depth']=_0x35ed9a['depth']+0x1),_0x35ed9a[_0x1d18b5(0x152)]=!!_0x1f49be;var _0x3b6449=typeof _0x25f612==_0x1d18b5(0x191),_0x42c6d4={'name':_0x3b6449||_0x45bd9c?_0x4f2f6f:this[_0x1d18b5(0x142)](_0x4f2f6f)};if(_0x3b6449&&(_0x42c6d4[_0x1d18b5(0x191)]=!0x0),!(_0x349be6===_0x1d18b5(0x13d)||_0x349be6===_0x1d18b5(0x190))){var _0xa23ed0=this[_0x1d18b5(0x1b3)](_0x1ba119,_0x25f612);if(_0xa23ed0&&(_0xa23ed0[_0x1d18b5(0x1a1)]&&(_0x42c6d4[_0x1d18b5(0x14d)]=!0x0),_0xa23ed0['get']&&!_0x1f49be&&!_0x35ed9a['resolveGetters']))return _0x42c6d4['getter']=!0x0,this['_processTreeNodeResult'](_0x42c6d4,_0x35ed9a),_0x42c6d4;}var _0x24fdc9;try{_0x24fdc9=_0x2f04ed(_0x1ba119,_0x25f612);}catch(_0x5c4ede){return _0x42c6d4={'name':_0x4f2f6f,'type':_0x1d18b5(0x18a),'error':_0x5c4ede[_0x1d18b5(0x147)]},this['_processTreeNodeResult'](_0x42c6d4,_0x35ed9a),_0x42c6d4;}var _0x257cc3=this[_0x1d18b5(0xf8)](_0x24fdc9),_0x4d125d=this[_0x1d18b5(0x199)](_0x257cc3);if(_0x42c6d4[_0x1d18b5(0x1ae)]=_0x257cc3,_0x4d125d)this['_processTreeNodeResult'](_0x42c6d4,_0x35ed9a,_0x24fdc9,function(){var _0x139f8f=_0x1d18b5;_0x42c6d4['value']=_0x24fdc9[_0x139f8f(0xfb)](),!_0x1f49be&&_0x39dad5['_capIfString'](_0x257cc3,_0x42c6d4,_0x35ed9a,{});});else{var _0x228df6=_0x35ed9a['autoExpand']&&_0x35ed9a[_0x1d18b5(0x113)]<_0x35ed9a[_0x1d18b5(0x13e)]&&_0x35ed9a[_0x1d18b5(0x130)][_0x1d18b5(0x12e)](_0x24fdc9)<0x0&&_0x257cc3!==_0x1d18b5(0xe8)&&_0x35ed9a[_0x1d18b5(0xec)]<_0x35ed9a[_0x1d18b5(0x1a0)];_0x228df6||_0x35ed9a[_0x1d18b5(0x113)]<_0x1de289||_0x1f49be?(this[_0x1d18b5(0x105)](_0x42c6d4,_0x24fdc9,_0x35ed9a,_0x1f49be||{}),this[_0x1d18b5(0xf9)](_0x24fdc9,_0x42c6d4)):this[_0x1d18b5(0x193)](_0x42c6d4,_0x35ed9a,_0x24fdc9,function(){var _0x16098f=_0x1d18b5;_0x257cc3===_0x16098f(0x18f)||_0x257cc3==='undefined'||(delete _0x42c6d4[_0x16098f(0x1b0)],_0x42c6d4[_0x16098f(0x14a)]=!0x0);});}return _0x42c6d4;}finally{_0x35ed9a[_0x1d18b5(0x163)]=_0x2533f6,_0x35ed9a[_0x1d18b5(0x12b)]=_0x1de289,_0x35ed9a[_0x1d18b5(0x152)]=_0x2097cc;}}[_0x582a5f(0x117)](_0x3f7023,_0x30d35c,_0x4a91ed,_0x11a5ba){var _0x49a606=_0x582a5f,_0x328c8e=_0x11a5ba[_0x49a606(0xed)]||_0x4a91ed[_0x49a606(0xed)];if((_0x3f7023==='string'||_0x3f7023==='String')&&_0x30d35c[_0x49a606(0x1b0)]){let _0x41f673=_0x30d35c['value'][_0x49a606(0x141)];_0x4a91ed['allStrLength']+=_0x41f673,_0x4a91ed[_0x49a606(0x16f)]>_0x4a91ed[_0x49a606(0x167)]?(_0x30d35c[_0x49a606(0x14a)]='',delete _0x30d35c[_0x49a606(0x1b0)]):_0x41f673>_0x328c8e&&(_0x30d35c['capped']=_0x30d35c[_0x49a606(0x1b0)][_0x49a606(0xfe)](0x0,_0x328c8e),delete _0x30d35c[_0x49a606(0x1b0)]);}}[_0x582a5f(0x181)](_0xe21256){var _0x533063=_0x582a5f;return!!(_0xe21256&&_0x5a79f4['Map']&&this[_0x533063(0x19c)](_0xe21256)===_0x533063(0x15f)&&_0xe21256[_0x533063(0x178)]);}['_propertyName'](_0x3bf0a5){var _0x16fdf0=_0x582a5f;if(_0x3bf0a5['match'](/^\\\\d+$/))return _0x3bf0a5;var _0x3bbaed;try{_0x3bbaed=JSON[_0x16fdf0(0x151)](''+_0x3bf0a5);}catch{_0x3bbaed='\\\\x22'+this[_0x16fdf0(0x19c)](_0x3bf0a5)+'\\\\x22';}return _0x3bbaed[_0x16fdf0(0x11e)](/^\\\"([a-zA-Z_][a-zA-Z_0-9]*)\\\"$/)?_0x3bbaed=_0x3bbaed[_0x16fdf0(0xfe)](0x1,_0x3bbaed[_0x16fdf0(0x141)]-0x2):_0x3bbaed=_0x3bbaed[_0x16fdf0(0x13f)](/'/g,'\\\\x5c\\\\x27')[_0x16fdf0(0x13f)](/\\\\\\\\\\\"/g,'\\\\x22')[_0x16fdf0(0x13f)](/(^\\\"|\\\"$)/g,'\\\\x27'),_0x3bbaed;}[_0x582a5f(0x193)](_0x56823e,_0x285b41,_0x417adb,_0x287a6a){var _0xcc6d0d=_0x582a5f;this[_0xcc6d0d(0x180)](_0x56823e,_0x285b41),_0x287a6a&&_0x287a6a(),this[_0xcc6d0d(0xf9)](_0x417adb,_0x56823e),this[_0xcc6d0d(0x174)](_0x56823e,_0x285b41);}[_0x582a5f(0x180)](_0x4b8db4,_0x4929d2){var _0x81a071=_0x582a5f;this[_0x81a071(0x1a8)](_0x4b8db4,_0x4929d2),this['_setNodeQueryPath'](_0x4b8db4,_0x4929d2),this['_setNodeExpressionPath'](_0x4b8db4,_0x4929d2),this[_0x81a071(0x18c)](_0x4b8db4,_0x4929d2);}[_0x582a5f(0x1a8)](_0x4e467c,_0x1812d0){}[_0x582a5f(0x196)](_0x4e63c2,_0x2a62fb){}[_0x582a5f(0x182)](_0x291f16,_0x393338){}[_0x582a5f(0x13c)](_0x3fc2f2){var _0x33f1bf=_0x582a5f;return _0x3fc2f2===this[_0x33f1bf(0x1ad)];}[_0x582a5f(0x174)](_0xd15478,_0x519eae){var _0x3efd93=_0x582a5f;this[_0x3efd93(0x182)](_0xd15478,_0x519eae),this[_0x3efd93(0x10f)](_0xd15478),_0x519eae[_0x3efd93(0xfd)]&&this[_0x3efd93(0x100)](_0xd15478),this[_0x3efd93(0x184)](_0xd15478,_0x519eae),this[_0x3efd93(0x1c0)](_0xd15478,_0x519eae),this[_0x3efd93(0x1bf)](_0xd15478);}[_0x582a5f(0xf9)](_0x14dd9a,_0x3ba4b1){var _0x5c3136=_0x582a5f;try{_0x14dd9a&&typeof _0x14dd9a[_0x5c3136(0x141)]=='number'&&(_0x3ba4b1[_0x5c3136(0x141)]=_0x14dd9a[_0x5c3136(0x141)]);}catch{}if(_0x3ba4b1[_0x5c3136(0x1ae)]==='number'||_0x3ba4b1[_0x5c3136(0x1ae)]==='Number'){if(isNaN(_0x3ba4b1['value']))_0x3ba4b1['nan']=!0x0,delete _0x3ba4b1[_0x5c3136(0x1b0)];else switch(_0x3ba4b1['value']){case Number[_0x5c3136(0x17c)]:_0x3ba4b1[_0x5c3136(0x10a)]=!0x0,delete _0x3ba4b1[_0x5c3136(0x1b0)];break;case Number['NEGATIVE_INFINITY']:_0x3ba4b1[_0x5c3136(0x10e)]=!0x0,delete _0x3ba4b1[_0x5c3136(0x1b0)];break;case 0x0:this['_isNegativeZero'](_0x3ba4b1[_0x5c3136(0x1b0)])&&(_0x3ba4b1[_0x5c3136(0x12d)]=!0x0);break;}}else _0x3ba4b1[_0x5c3136(0x1ae)]==='function'&&typeof _0x14dd9a['name']==_0x5c3136(0x103)&&_0x14dd9a[_0x5c3136(0x187)]&&_0x3ba4b1['name']&&_0x14dd9a[_0x5c3136(0x187)]!==_0x3ba4b1['name']&&(_0x3ba4b1[_0x5c3136(0x18d)]=_0x14dd9a['name']);}[_0x582a5f(0x1b8)](_0x550234){return 0x1/_0x550234===Number['NEGATIVE_INFINITY'];}[_0x582a5f(0x100)](_0x3aaefa){var _0x56eb5e=_0x582a5f;!_0x3aaefa[_0x56eb5e(0x1bb)]||!_0x3aaefa[_0x56eb5e(0x1bb)][_0x56eb5e(0x141)]||_0x3aaefa[_0x56eb5e(0x1ae)]===_0x56eb5e(0x13d)||_0x3aaefa[_0x56eb5e(0x1ae)]===_0x56eb5e(0x1be)||_0x3aaefa[_0x56eb5e(0x1ae)]===_0x56eb5e(0x128)||_0x3aaefa[_0x56eb5e(0x1bb)][_0x56eb5e(0x122)](function(_0x3bbc68,_0x41cf9d){var _0x5b2df8=_0x56eb5e,_0x588b37=_0x3bbc68[_0x5b2df8(0x187)]['toLowerCase'](),_0x1902bb=_0x41cf9d[_0x5b2df8(0x187)]['toLowerCase']();return _0x588b37<_0x1902bb?-0x1:_0x588b37>_0x1902bb?0x1:0x0;});}[_0x582a5f(0x184)](_0xac1d8,_0x3f06d6){var _0x1242f6=_0x582a5f;if(!(_0x3f06d6['noFunctions']||!_0xac1d8[_0x1242f6(0x1bb)]||!_0xac1d8[_0x1242f6(0x1bb)][_0x1242f6(0x141)])){for(var _0x1d4e20=[],_0xaebb13=[],_0x3f0c7e=0x0,_0x38822e=_0xac1d8['props']['length'];_0x3f0c7e<_0x38822e;_0x3f0c7e++){var _0x54f263=_0xac1d8['props'][_0x3f0c7e];_0x54f263['type']===_0x1242f6(0xe8)?_0x1d4e20[_0x1242f6(0x16c)](_0x54f263):_0xaebb13[_0x1242f6(0x16c)](_0x54f263);}if(!(!_0xaebb13['length']||_0x1d4e20['length']<=0x1)){_0xac1d8[_0x1242f6(0x1bb)]=_0xaebb13;var _0x4db175={'functionsNode':!0x0,'props':_0x1d4e20};this['_setNodeId'](_0x4db175,_0x3f06d6),this['_setNodeLabel'](_0x4db175,_0x3f06d6),this[_0x1242f6(0x10f)](_0x4db175),this[_0x1242f6(0x18c)](_0x4db175,_0x3f06d6),_0x4db175['id']+='\\\\x20f',_0xac1d8['props']['unshift'](_0x4db175);}}}['_addLoadNode'](_0x38851a,_0x43e3b5){}[_0x582a5f(0x10f)](_0x2aad46){}[_0x582a5f(0x1a7)](_0x4a0693){var _0x34ddd0=_0x582a5f;return Array[_0x34ddd0(0x125)](_0x4a0693)||typeof _0x4a0693==_0x34ddd0(0x107)&&this[_0x34ddd0(0x19c)](_0x4a0693)===_0x34ddd0(0x19a);}[_0x582a5f(0x18c)](_0x4be131,_0x15732e){}[_0x582a5f(0x1bf)](_0x3d175d){var _0x407640=_0x582a5f;delete _0x3d175d['_hasSymbolPropertyOnItsPath'],delete _0x3d175d[_0x407640(0x1af)],delete _0x3d175d[_0x407640(0x15e)];}[_0x582a5f(0x11a)](_0x14c68b,_0x1ef00b){}[_0x582a5f(0x136)](_0x50967b){var _0x3e7be2=_0x582a5f;return _0x50967b?_0x50967b[_0x3e7be2(0x11e)](this[_0x3e7be2(0x11b)])?'['+_0x50967b+']':_0x50967b[_0x3e7be2(0x11e)](this[_0x3e7be2(0x1b6)])?'.'+_0x50967b:_0x50967b[_0x3e7be2(0x11e)](this[_0x3e7be2(0x19f)])?'['+_0x50967b+']':'[\\\\x27'+_0x50967b+'\\\\x27]':'';}}let _0x331db6=new _0x1ed8a8();function _0x8784b0(_0x195392,_0x1683f7,_0x50ba87,_0x523b5d,_0x2b7c8b,_0x5bb8db){var _0x2347f3=_0x582a5f;let _0x5f0c43,_0x1e9fa6;try{_0x1e9fa6=_0xb8c436(),_0x5f0c43=_0x1a495c[_0x1683f7],!_0x5f0c43||_0x1e9fa6-_0x5f0c43['ts']>0x1f4&&_0x5f0c43['count']&&_0x5f0c43['time']/_0x5f0c43[_0x2347f3(0x112)]<0x64?(_0x1a495c[_0x1683f7]=_0x5f0c43={'count':0x0,'time':0x0,'ts':_0x1e9fa6},_0x1a495c['hits']={}):_0x1e9fa6-_0x1a495c[_0x2347f3(0x106)]['ts']>0x32&&_0x1a495c['hits'][_0x2347f3(0x112)]&&_0x1a495c[_0x2347f3(0x106)][_0x2347f3(0x1c1)]/_0x1a495c['hits']['count']<0x64&&(_0x1a495c['hits']={});let _0x16e561=[],_0x128475=_0x5f0c43[_0x2347f3(0x104)]||_0x1a495c[_0x2347f3(0x106)][_0x2347f3(0x104)]?_0xc7aa2a:_0x481166,_0x2960fc=_0x3f3cff=>{var _0x268697=_0x2347f3;let _0x569e78={};return _0x569e78[_0x268697(0x1bb)]=_0x3f3cff['props'],_0x569e78[_0x268697(0xf4)]=_0x3f3cff[_0x268697(0xf4)],_0x569e78['strLength']=_0x3f3cff[_0x268697(0xed)],_0x569e78[_0x268697(0x167)]=_0x3f3cff['totalStrLength'],_0x569e78[_0x268697(0x1a0)]=_0x3f3cff[_0x268697(0x1a0)],_0x569e78[_0x268697(0x13e)]=_0x3f3cff['autoExpandMaxDepth'],_0x569e78[_0x268697(0xfd)]=!0x1,_0x569e78['noFunctions']=!_0x2932ea,_0x569e78[_0x268697(0x12b)]=0x1,_0x569e78[_0x268697(0x113)]=0x0,_0x569e78['expId']=_0x268697(0xe9),_0x569e78[_0x268697(0xfa)]=_0x268697(0x11f),_0x569e78[_0x268697(0x131)]=!0x0,_0x569e78[_0x268697(0x130)]=[],_0x569e78['autoExpandPropertyCount']=0x0,_0x569e78[_0x268697(0x1a2)]=!0x0,_0x569e78[_0x268697(0x16f)]=0x0,_0x569e78['node']={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x569e78;};for(var _0x1af2da=0x0;_0x1af2da<_0x2b7c8b[_0x2347f3(0x141)];_0x1af2da++)_0x16e561[_0x2347f3(0x16c)](_0x331db6[_0x2347f3(0x105)]({'timeNode':_0x195392==='time'||void 0x0},_0x2b7c8b[_0x1af2da],_0x2960fc(_0x128475),{}));if(_0x195392===_0x2347f3(0x134)){let _0x26dbb8=Error[_0x2347f3(0x118)];try{Error[_0x2347f3(0x118)]=0x1/0x0,_0x16e561[_0x2347f3(0x16c)](_0x331db6[_0x2347f3(0x105)]({'stackNode':!0x0},new Error()['stack'],_0x2960fc(_0x128475),{'strLength':0x1/0x0}));}finally{Error[_0x2347f3(0x118)]=_0x26dbb8;}}return{'method':_0x2347f3(0x10d),'version':_0x394eca,'args':[{'ts':_0x50ba87,'session':_0x523b5d,'args':_0x16e561,'id':_0x1683f7,'context':_0x5bb8db}]};}catch(_0x127ec8){return{'method':_0x2347f3(0x10d),'version':_0x394eca,'args':[{'ts':_0x50ba87,'session':_0x523b5d,'args':[{'type':_0x2347f3(0x18a),'error':_0x127ec8&&_0x127ec8[_0x2347f3(0x147)]}],'id':_0x1683f7,'context':_0x5bb8db}]};}finally{try{if(_0x5f0c43&&_0x1e9fa6){let _0x3a20c8=_0xb8c436();_0x5f0c43[_0x2347f3(0x112)]++,_0x5f0c43[_0x2347f3(0x1c1)]+=_0x5b7ec7(_0x1e9fa6,_0x3a20c8),_0x5f0c43['ts']=_0x3a20c8,_0x1a495c[_0x2347f3(0x106)][_0x2347f3(0x112)]++,_0x1a495c[_0x2347f3(0x106)][_0x2347f3(0x1c1)]+=_0x5b7ec7(_0x1e9fa6,_0x3a20c8),_0x1a495c['hits']['ts']=_0x3a20c8,(_0x5f0c43[_0x2347f3(0x112)]>0x32||_0x5f0c43[_0x2347f3(0x1c1)]>0x64)&&(_0x5f0c43[_0x2347f3(0x104)]=!0x0),(_0x1a495c[_0x2347f3(0x106)][_0x2347f3(0x112)]>0x3e8||_0x1a495c[_0x2347f3(0x106)]['time']>0x12c)&&(_0x1a495c[_0x2347f3(0x106)]['reduceLimits']=!0x0);}}catch{}}}return _0x5a79f4[_0x582a5f(0x14f)];})(globalThis,_0x362114(0x194),'61502',_0x362114(0x110),'webpack','1.0.0',_0x362114(0x169),_0x362114(0x1b5),'');\");}catch(e){}};function oo_oo(i,...v){try{oo_cm().consoleLog(i, v);}catch(e){} return v};function oo_tr(i,...v){try{oo_cm().consoleTrace(i, v);}catch(e){} return v};function oo_ts(){try{oo_cm().consoleTime();}catch(e){}};function oo_te(){try{oo_cm().consoleTimeEnd();}catch(e){}};/*eslint eslint-comments/disable-enable-pair:,eslint-comments/no-unlimited-disable:,eslint-comments/no-aggregating-enable:,eslint-comments/no-duplicate-disable:,eslint-comments/no-unused-disable:,eslint-comments/no-unused-enable:,*/","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\CodeEditor.js",["419"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\recruiter\\CreateJobs.js",["420","421"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\recruiter\\Profile.js",["422","423"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\recruiter\\MyJobs.js",["424","425"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js",["426","427","428","429","430","431","432"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\component\\recruiter\\JobApplications.js",["433","434","435","436","437"],"import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Application Status\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"rejected\"\r\n                      checked={searchOptions.status.rejected}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Rejected\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"applied\"\r\n                      checked={searchOptions.status.applied}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Applied\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"shortlisted\"\r\n                      checked={searchOptions.status.shortlisted}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Shortlisted\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"name\"\r\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"name\">\r\n                    <Typography>Name</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"dateOfApplication\"\r\n                    checked={searchOptions.sort.dateOfApplication.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"dateOfApplication\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"dateOfApplication\">\r\n                    <Typography>Date of Application</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.dateOfApplication.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            desc: !searchOptions.sort.dateOfApplication.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.dateOfApplication.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\r\n                              .desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  const getResume = () => {\r\n    if (\r\n      application.jobApplicant.resume &&\r\n      application.jobApplicant.resume !== \"\"\r\n    ) {\r\n      const address = `${server}${application.jobApplicant.resume}`;\r\n      /* eslint-disable */console.log(...oo_oo(`86fc465a_0`,address));\r\n      axios(address, {\r\n        method: \"GET\",\r\n        responseType: \"blob\",\r\n      })\r\n        .then((response) => {\r\n          const file = new Blob([response.data], { type: \"application/pdf\" });\r\n          const fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n        })\r\n        .catch((error) => {\r\n          /* eslint-disable */console.log(...oo_oo(`86fc465a_1`,error));\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"No resume found\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        /* eslint-disable */console.log(...oo_oo(`86fc465a_2`,err.response));\r\n      });\r\n  };\r\n\r\n  const buttonSet = {\r\n    applied: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"shortlisted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"shortlisted\")}\r\n          >\r\n            Shortlist\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    shortlisted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"accepted\")}\r\n          >\r\n            Accept\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    rejected: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Rejected\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    accepted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Accepted\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    cancelled: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"cancelled\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Cancelled\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    finished: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"finished\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Finished\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            Education:{\" \"}\r\n            {application.jobApplicant.education\r\n              .map((edu) => {\r\n                return `${edu.institutionName} (${edu.startYear}-${\r\n                  edu.endYear ? edu.endYear : \"Ongoing\"\r\n                })`;\r\n              })\r\n              .join(\", \")}\r\n          </Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              color=\"secondary\"\r\n              onClick={() => getResume()}\r\n            >\r\n              Download Resume\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs>\r\n            {buttonSet[application.status]}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            // onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst JobApplications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const { jobId } = useParams();\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    status: {\r\n      all: false,\r\n      applied: false,\r\n      shortlisted: false,\r\n    },\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfApplication: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n\r\n    if (searchOptions.status.rejected) {\r\n      searchParams = [...searchParams, `status=rejected`];\r\n    }\r\n    if (searchOptions.status.applied) {\r\n      searchParams = [...searchParams, `status=applied`];\r\n    }\r\n    if (searchOptions.status.shortlisted) {\r\n      searchParams = [...searchParams, `status=shortlisted`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    /* eslint-disable */console.log(...oo_oo(`86fc465a_3`,queryString));\r\n    let address = `${apiList.applicants}?jobId=${jobId}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}&${queryString}`;\r\n    }\r\n\r\n    /* eslint-disable */console.log(...oo_oo(`86fc465a_4`,address));\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        /* eslint-disable */console.log(...oo_oo(`86fc465a_5`,response.data));\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        /* eslint-disable */console.log(...oo_oo(`86fc465a_6`,err.response));\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Applications</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton onClick={() => setFilterOpen(true)}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                {/* {console.log(obj)} */}\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobApplications;\r\n/* eslint-disable */;function oo_cm(){try{return (0,eval)(\"globalThis._console_ninja\") || (0,eval)(\"/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0x362114=_0x1e59;(function(_0x126ff6,_0x2f9fb9){var _0x3cf7f5=_0x1e59,_0x3212b5=_0x126ff6();while(!![]){try{var _0x55adfd=parseInt(_0x3cf7f5(0x1b1))/0x1+parseInt(_0x3cf7f5(0x192))/0x2*(parseInt(_0x3cf7f5(0xf2))/0x3)+-parseInt(_0x3cf7f5(0xf1))/0x4+-parseInt(_0x3cf7f5(0xf6))/0x5*(parseInt(_0x3cf7f5(0xef))/0x6)+-parseInt(_0x3cf7f5(0xeb))/0x7+parseInt(_0x3cf7f5(0x146))/0x8+parseInt(_0x3cf7f5(0x13b))/0x9;if(_0x55adfd===_0x2f9fb9)break;else _0x3212b5['push'](_0x3212b5['shift']());}catch(_0xfd43b8){_0x3212b5['push'](_0x3212b5['shift']());}}}(_0x3b04,0xe19e8));function _0x1e59(_0x3311ae,_0x1de95b){var _0x3b041e=_0x3b04();return _0x1e59=function(_0x1e5914,_0x5b36f4){_0x1e5914=_0x1e5914-0xe8;var _0x1b05c7=_0x3b041e[_0x1e5914];return _0x1b05c7;},_0x1e59(_0x3311ae,_0x1de95b);}var ue=Object['create'],te=Object[_0x362114(0x11c)],he=Object[_0x362114(0x17a)],le=Object['getOwnPropertyNames'],fe=Object['getPrototypeOf'],_e=Object[_0x362114(0x1aa)][_0x362114(0x170)],pe=(_0x253a3e,_0x321adb,_0x559a40,_0x41b9e3)=>{var _0x526a67=_0x362114;if(_0x321adb&&typeof _0x321adb==_0x526a67(0x107)||typeof _0x321adb==_0x526a67(0xe8)){for(let _0x5a7218 of le(_0x321adb))!_e['call'](_0x253a3e,_0x5a7218)&&_0x5a7218!==_0x559a40&&te(_0x253a3e,_0x5a7218,{'get':()=>_0x321adb[_0x5a7218],'enumerable':!(_0x41b9e3=he(_0x321adb,_0x5a7218))||_0x41b9e3[_0x526a67(0x19b)]});}return _0x253a3e;},ne=(_0x178c4f,_0xa8ee64,_0x2993d6)=>(_0x2993d6=_0x178c4f!=null?ue(fe(_0x178c4f)):{},pe(_0xa8ee64||!_0x178c4f||!_0x178c4f[_0x362114(0x173)]?te(_0x2993d6,_0x362114(0x10b),{'value':_0x178c4f,'enumerable':!0x0}):_0x2993d6,_0x178c4f)),Q=class{constructor(_0xd8cc62,_0xa2c024,_0x5c0231,_0x3dda39){var _0xbfba63=_0x362114;this[_0xbfba63(0x1bd)]=_0xd8cc62,this[_0xbfba63(0x120)]=_0xa2c024,this[_0xbfba63(0x127)]=_0x5c0231,this[_0xbfba63(0x165)]=_0x3dda39,this[_0xbfba63(0x149)]=!0x0,this[_0xbfba63(0x135)]=!0x0,this['_connected']=!0x1,this[_0xbfba63(0x10c)]=!0x1,this[_0xbfba63(0x197)]=!!this[_0xbfba63(0x1bd)][_0xbfba63(0x17f)],this[_0xbfba63(0x189)]=null,this['_connectAttemptCount']=0x0,this[_0xbfba63(0x1b4)]=0x14,this[_0xbfba63(0xee)]=this[_0xbfba63(0x197)]?_0xbfba63(0xf7):_0xbfba63(0x172);}async[_0x362114(0x1ac)](){var _0x23892b=_0x362114;if(this[_0x23892b(0x189)])return this[_0x23892b(0x189)];let _0x1691b5;if(this['_inBrowser'])_0x1691b5=this[_0x23892b(0x1bd)][_0x23892b(0x17f)];else{if(this[_0x23892b(0x1bd)][_0x23892b(0x183)]?.[_0x23892b(0x1c4)])_0x1691b5=this[_0x23892b(0x1bd)][_0x23892b(0x183)]?.[_0x23892b(0x1c4)];else try{let _0x43f34c=await import(_0x23892b(0x14c));_0x1691b5=(await import((await import(_0x23892b(0x195)))[_0x23892b(0x1b2)](_0x43f34c[_0x23892b(0x160)](this[_0x23892b(0x165)],_0x23892b(0x179)))[_0x23892b(0x132)]()))[_0x23892b(0x10b)];}catch{try{_0x1691b5=require(require(_0x23892b(0x14c))[_0x23892b(0x160)](this[_0x23892b(0x165)],'ws'));}catch{throw new Error(_0x23892b(0x12c));}}}return this[_0x23892b(0x189)]=_0x1691b5,_0x1691b5;}[_0x362114(0x1bc)](){var _0x4a0de0=_0x362114;this[_0x4a0de0(0x10c)]||this['_connected']||this[_0x4a0de0(0xfc)]>=this[_0x4a0de0(0x1b4)]||(this[_0x4a0de0(0x135)]=!0x1,this[_0x4a0de0(0x10c)]=!0x0,this['_connectAttemptCount']++,this[_0x4a0de0(0x109)]=new Promise((_0x37f9cf,_0x1f87df)=>{var _0x41d06f=_0x4a0de0;this[_0x41d06f(0x1ac)]()[_0x41d06f(0x186)](_0x43bdb1=>{var _0x1630f2=_0x41d06f;let _0x105798=new _0x43bdb1('ws://'+this[_0x1630f2(0x120)]+':'+this[_0x1630f2(0x127)]);_0x105798[_0x1630f2(0x19e)]=()=>{var _0x5e355c=_0x1630f2;this[_0x5e355c(0x149)]=!0x1,this[_0x5e355c(0x144)](_0x105798),this['_attemptToReconnectShortly'](),_0x1f87df(new Error('logger\\\\x20websocket\\\\x20error'));},_0x105798[_0x1630f2(0x1a3)]=()=>{var _0x31d53b=_0x1630f2;this['_inBrowser']||_0x105798[_0x31d53b(0x123)]&&_0x105798[_0x31d53b(0x123)][_0x31d53b(0x18e)]&&_0x105798[_0x31d53b(0x123)][_0x31d53b(0x18e)](),_0x37f9cf(_0x105798);},_0x105798[_0x1630f2(0x150)]=()=>{var _0x86dfa1=_0x1630f2;this[_0x86dfa1(0x135)]=!0x0,this[_0x86dfa1(0x144)](_0x105798),this['_attemptToReconnectShortly']();},_0x105798[_0x1630f2(0x19d)]=_0x47fe6a=>{var _0x3f24a1=_0x1630f2;try{_0x47fe6a&&_0x47fe6a[_0x3f24a1(0x1c3)]&&this[_0x3f24a1(0x197)]&&JSON[_0x3f24a1(0x133)](_0x47fe6a[_0x3f24a1(0x1c3)])[_0x3f24a1(0x17b)]===_0x3f24a1(0x1b9)&&this[_0x3f24a1(0x1bd)][_0x3f24a1(0x16d)]['reload']();}catch{}};})[_0x41d06f(0x186)](_0x4da13e=>(this[_0x41d06f(0xff)]=!0x0,this['_connecting']=!0x1,this[_0x41d06f(0x135)]=!0x1,this['_allowedToSend']=!0x0,this[_0x41d06f(0xfc)]=0x0,_0x4da13e))['catch'](_0x2c619e=>(this[_0x41d06f(0xff)]=!0x1,this[_0x41d06f(0x10c)]=!0x1,_0x1f87df(new Error(_0x41d06f(0x157)+(_0x2c619e&&_0x2c619e['message'])))));}));}[_0x362114(0x144)](_0x380b92){var _0x4b1362=_0x362114;this[_0x4b1362(0xff)]=!0x1,this[_0x4b1362(0x10c)]=!0x1;try{_0x380b92['onclose']=null,_0x380b92[_0x4b1362(0x19e)]=null,_0x380b92['onopen']=null;}catch{}try{_0x380b92[_0x4b1362(0x124)]<0x2&&_0x380b92[_0x4b1362(0x154)]();}catch{}}[_0x362114(0x1ab)](){var _0x3e9f84=_0x362114;clearTimeout(this['_reconnectTimeout']),!(this[_0x3e9f84(0xfc)]>=this[_0x3e9f84(0x1b4)])&&(this[_0x3e9f84(0x15c)]=setTimeout(()=>{var _0x2032de=_0x3e9f84;this['_connected']||this['_connecting']||(this[_0x2032de(0x1bc)](),this[_0x2032de(0x109)]?.[_0x2032de(0x116)](()=>this[_0x2032de(0x1ab)]()));},0x1f4),this[_0x3e9f84(0x15c)][_0x3e9f84(0x18e)]&&this['_reconnectTimeout'][_0x3e9f84(0x18e)]());}async[_0x362114(0x1ba)](_0x4783c8){var _0x5eee02=_0x362114;try{if(!this['_allowedToSend'])return;this[_0x5eee02(0x135)]&&this[_0x5eee02(0x1bc)](),(await this['_ws'])[_0x5eee02(0x1ba)](JSON[_0x5eee02(0x151)](_0x4783c8));}catch(_0x434e0b){console['warn'](this['_sendErrorMessage']+':\\\\x20'+(_0x434e0b&&_0x434e0b[_0x5eee02(0x147)])),this[_0x5eee02(0x149)]=!0x1,this[_0x5eee02(0x1ab)]();}}};function V(_0x1e3f90,_0x297aba,_0x45b9d7,_0x4043ce,_0x1e7241){var _0x2ee86f=_0x362114;let _0x53eded=_0x45b9d7[_0x2ee86f(0x11d)](',')[_0x2ee86f(0x129)](_0x342c2c=>{var _0x1f06d3=_0x2ee86f;try{_0x1e3f90[_0x1f06d3(0x164)]||((_0x1e7241===_0x1f06d3(0x15d)||_0x1e7241===_0x1f06d3(0x114))&&(_0x1e7241+=_0x1e3f90[_0x1f06d3(0x183)]?.[_0x1f06d3(0x121)]?.[_0x1f06d3(0x1c6)]?_0x1f06d3(0x16b):_0x1f06d3(0x17d)),_0x1e3f90[_0x1f06d3(0x164)]={'id':+new Date(),'tool':_0x1e7241});let _0x495a7e=new Q(_0x1e3f90,_0x297aba,_0x342c2c,_0x4043ce);return _0x495a7e[_0x1f06d3(0x1ba)][_0x1f06d3(0x119)](_0x495a7e);}catch(_0x21764e){return console[_0x1f06d3(0x185)](_0x1f06d3(0x1a6),_0x21764e&&_0x21764e[_0x1f06d3(0x147)]),()=>{};}});return _0x73258=>_0x53eded[_0x2ee86f(0x178)](_0x22956f=>_0x22956f(_0x73258));}function H(_0xd6da49){var _0x161d10=_0x362114;let _0x112a6f=function(_0x21f777,_0x478c72){return _0x478c72-_0x21f777;},_0x45c0db;if(_0xd6da49[_0x161d10(0x115)])_0x45c0db=function(){var _0x1b6edc=_0x161d10;return _0xd6da49[_0x1b6edc(0x115)]['now']();};else{if(_0xd6da49[_0x161d10(0x183)]&&_0xd6da49['process']['hrtime'])_0x45c0db=function(){var _0x29d79e=_0x161d10;return _0xd6da49[_0x29d79e(0x183)]['hrtime']();},_0x112a6f=function(_0x1884fb,_0x6a1e6a){return 0x3e8*(_0x6a1e6a[0x0]-_0x1884fb[0x0])+(_0x6a1e6a[0x1]-_0x1884fb[0x1])/0xf4240;};else try{let {performance:_0x2d0ad7}=require(_0x161d10(0x1a5));_0x45c0db=function(){var _0x406281=_0x161d10;return _0x2d0ad7[_0x406281(0x1c7)]();};}catch{_0x45c0db=function(){return+new Date();};}}return{'elapsed':_0x112a6f,'timeStamp':_0x45c0db,'now':()=>Date[_0x161d10(0x1c7)]()};}function _0x3b04(){var _0x3b6a6b=['now','disabledTrace','function','root_exp_id','_addProperty','5598439RrtwSf','autoExpandPropertyCount','strLength','_sendErrorMessage','237270jlBwLL','_dateToString','1355528XRlJvN','3mhBALd','boolean','elements','elapsed','25qSkJhS','Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20refreshing\\\\x20the\\\\x20page\\\\x20may\\\\x20help','_type','_additionalMetadata','rootExpression','valueOf','_connectAttemptCount','sortProps','substr','_connected','_sortProps','_HTMLAllCollection','_isPrimitiveWrapperType','string','reduceLimits','serialize','hits','object','getOwnPropertySymbols','_ws','positiveInfinity','default','_connecting','log','negativeInfinity','_setNodeExpandableState',\\\"c:\\\\\\\\Users\\\\\\\\RAHUL\\\\\\\\.vscode\\\\\\\\extensions\\\\\\\\wallabyjs.console-ninja-0.0.125\\\\\\\\node_modules\\\",'Symbol','count','level','remix','performance','catch','_capIfString','stackTraceLimit','bind','_setNodeExpressionPath','_numberRegExp','defineProperty','split','match','root_exp','host','versions','sort','_socket','readyState','isArray','_p_','port','Set','map','_Symbol','depth','failed\\\\x20to\\\\x20find\\\\x20and\\\\x20load\\\\x20WebSocket','negativeZero','indexOf','number','autoExpandPreviousObjects','autoExpand','toString','parse','trace','_allowedToConnectOnSend','_propertyAccessor','cappedProps','argumentResolutionError','Boolean','concat','21510rOGlrd','_isUndefined','array','autoExpandMaxDepth','replace','_getOwnPropertySymbols','length','_propertyName','error','_disposeWebsocket','RegExp','3384nkeJQs','message','nuxt','_allowedToSend','capped','_p_name','path','setter','HTMLAllCollection','_console_ninja','onclose','stringify','isExpressionToEvaluate','_addObjectProperty','close','date','undefined','failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host:\\\\x20','current','_blacklistedProperty','getOwnPropertyNames','Number','_reconnectTimeout','next.js','_hasMapOnItsPath','[object\\\\x20Map]','join','includes','parent','expressionsToEvaluate','_console_ninja_session','nodeModules','pop','totalStrLength','_consoleNinjaAllowedToStart','1685108772066','_getOwnPropertyNames','\\\\x20server','push','location','Buffer','allStrLength','hasOwnProperty','console','Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20restarting\\\\x20the\\\\x20process\\\\x20may\\\\x20help','__es'+'Module','_treeNodePropertiesAfterFullValue','index','_regExpToString','hostname','forEach','ws/index.js','getOwnPropertyDescriptor','method','POSITIVE_INFINITY','\\\\x20browser','_p_length','WebSocket','_treeNodePropertiesBeforeFullValue','_isMap','_setNodeLabel','process','_addFunctionsNode','warn','then','name','bigint','_WebSocketClass','unknown','...','_setNodePermissions','funcName','unref','null','Error','symbol','3466186hMgNym','_processTreeNodeResult','127.0.0.1','url','_setNodeQueryPath','_inBrowser','String','_isPrimitiveType','[object\\\\x20Array]','enumerable','_objectToString','onmessage','onerror','_quotedRegExp','autoExpandLimit','set','resolveGetters','onopen','constructor','perf_hooks','logger\\\\x20failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host','_isArray','_setNodeId','_property','prototype','_attemptToReconnectShortly','getWebSocketClass','_undefined','type','_hasSetOnItsPath','value','524614unPoxd','pathToFileURL','_getOwnPropertyDescriptor','_maxConnectAttemptCount',[\\\"localhost\\\",\\\"127.0.0.1\\\",\\\"example.cypress.io\\\",\\\"DESKTOP-Q8CHRNP\\\",\\\"192.168.29.86\\\"],'_keyStrRegExp','call','_isNegativeZero','reload','send','props','_connectToHostNow','global','Map','_cleanNode','_addLoadNode','time','[object\\\\x20Date]','data','_WebSocket','slice','node'];_0x3b04=function(){return _0x3b6a6b;};return _0x3b04();}function X(_0x4020ef,_0x51ced0,_0x27d872){var _0xf677ae=_0x362114;if(_0x4020ef[_0xf677ae(0x168)]!==void 0x0)return _0x4020ef[_0xf677ae(0x168)];let _0x3db0be=_0x4020ef[_0xf677ae(0x183)]?.['versions']?.[_0xf677ae(0x1c6)];return _0x3db0be&&_0x27d872===_0xf677ae(0x148)?_0x4020ef[_0xf677ae(0x168)]=!0x1:_0x4020ef[_0xf677ae(0x168)]=_0x3db0be||!_0x51ced0||_0x4020ef[_0xf677ae(0x16d)]?.[_0xf677ae(0x177)]&&_0x51ced0[_0xf677ae(0x161)](_0x4020ef[_0xf677ae(0x16d)][_0xf677ae(0x177)]),_0x4020ef[_0xf677ae(0x168)];}((_0x5a79f4,_0x40fc8f,_0x477341,_0x3f6810,_0x43be50,_0x394eca,_0x454756,_0x599f27,_0x2932ea)=>{var _0x582a5f=_0x362114;if(_0x5a79f4['_console_ninja'])return _0x5a79f4[_0x582a5f(0x14f)];if(!X(_0x5a79f4,_0x599f27,_0x43be50))return _0x5a79f4['_console_ninja']={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x5a79f4[_0x582a5f(0x14f)];let _0x481166={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0xc7aa2a={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2},_0x4c293b=H(_0x5a79f4),_0x5b7ec7=_0x4c293b[_0x582a5f(0xf5)],_0xb8c436=_0x4c293b['timeStamp'],_0x204500=_0x4c293b[_0x582a5f(0x1c7)],_0x1a495c={'hits':{},'ts':{}},_0x2e7300=_0x3b78f8=>{_0x1a495c['ts'][_0x3b78f8]=_0xb8c436();},_0x397e7a=(_0x5ec5d7,_0x588071)=>{var _0x5cf8c0=_0x582a5f;let _0x3796f9=_0x1a495c['ts'][_0x588071];if(delete _0x1a495c['ts'][_0x588071],_0x3796f9){let _0x52caa1=_0x5b7ec7(_0x3796f9,_0xb8c436());_0x20e8d2(_0x8784b0(_0x5cf8c0(0x1c1),_0x5ec5d7,_0x204500(),_0x34b4ec,[_0x52caa1],_0x588071));}},_0x2586d2=_0x352b38=>_0x33f1ea=>{var _0x158c4c=_0x582a5f;try{_0x2e7300(_0x33f1ea),_0x352b38(_0x33f1ea);}finally{_0x5a79f4[_0x158c4c(0x171)][_0x158c4c(0x1c1)]=_0x352b38;}},_0x586d19=_0x1ae672=>_0x20043a=>{var _0x1c731e=_0x582a5f;try{let [_0x353353,_0x53dc62]=_0x20043a['split'](':logPointId:');_0x397e7a(_0x53dc62,_0x353353),_0x1ae672(_0x353353);}finally{_0x5a79f4[_0x1c731e(0x171)]['timeEnd']=_0x1ae672;}};_0x5a79f4['_console_ninja']={'consoleLog':(_0x3e38bf,_0xfe0330)=>{var _0x53276b=_0x582a5f;_0x5a79f4[_0x53276b(0x171)][_0x53276b(0x10d)][_0x53276b(0x187)]!=='disabledLog'&&_0x20e8d2(_0x8784b0(_0x53276b(0x10d),_0x3e38bf,_0x204500(),_0x34b4ec,_0xfe0330));},'consoleTrace':(_0x479681,_0x25392e)=>{var _0x545a93=_0x582a5f;_0x5a79f4[_0x545a93(0x171)][_0x545a93(0x10d)][_0x545a93(0x187)]!==_0x545a93(0x1c8)&&_0x20e8d2(_0x8784b0(_0x545a93(0x134),_0x479681,_0x204500(),_0x34b4ec,_0x25392e));},'consoleTime':()=>{var _0x19beea=_0x582a5f;_0x5a79f4[_0x19beea(0x171)]['time']=_0x2586d2(_0x5a79f4['console'][_0x19beea(0x1c1)]);},'consoleTimeEnd':()=>{var _0x1d28de=_0x582a5f;_0x5a79f4[_0x1d28de(0x171)]['timeEnd']=_0x586d19(_0x5a79f4[_0x1d28de(0x171)]['timeEnd']);},'autoLog':(_0x581ed3,_0x4be935)=>{var _0x503037=_0x582a5f;_0x20e8d2(_0x8784b0(_0x503037(0x10d),_0x4be935,_0x204500(),_0x34b4ec,[_0x581ed3]));},'autoTrace':(_0x3fe5e1,_0x46f74c)=>{var _0x5ae89a=_0x582a5f;_0x20e8d2(_0x8784b0(_0x5ae89a(0x134),_0x46f74c,_0x204500(),_0x34b4ec,[_0x3fe5e1]));},'autoTime':(_0x453a85,_0x1770e3,_0x14155e)=>{_0x2e7300(_0x14155e);},'autoTimeEnd':(_0x1ee798,_0x4489db,_0x3493b5)=>{_0x397e7a(_0x4489db,_0x3493b5);}};let _0x20e8d2=V(_0x5a79f4,_0x40fc8f,_0x477341,_0x3f6810,_0x43be50),_0x34b4ec=_0x5a79f4['_console_ninja_session'];class _0x1ed8a8{constructor(){var _0x35466c=_0x582a5f;this[_0x35466c(0x1b6)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\\\xA0-\\\\uFFFF][_$a-zA-Z0-9\\\\xA0-\\\\uFFFF]*$/,this[_0x35466c(0x11b)]=/^(0|[1-9][0-9]*)$/,this['_quotedRegExp']=/'([^\\\\\\\\']|\\\\\\\\')*'/,this[_0x35466c(0x1ad)]=_0x5a79f4['undefined'],this[_0x35466c(0x101)]=_0x5a79f4[_0x35466c(0x14e)],this[_0x35466c(0x1b3)]=Object[_0x35466c(0x17a)],this['_getOwnPropertyNames']=Object[_0x35466c(0x15a)],this['_Symbol']=_0x5a79f4[_0x35466c(0x111)],this[_0x35466c(0x176)]=RegExp[_0x35466c(0x1aa)][_0x35466c(0x132)],this[_0x35466c(0xf0)]=Date[_0x35466c(0x1aa)][_0x35466c(0x132)];}[_0x582a5f(0x105)](_0x684b73,_0x40b08d,_0x2084ac,_0x424268){var _0x56b1ee=_0x582a5f,_0x18fc0b=this,_0x4dfc52=_0x2084ac[_0x56b1ee(0x131)];function _0x3bc4ff(_0x531d70,_0x482dba,_0x335174){var _0xea88b=_0x56b1ee;_0x482dba[_0xea88b(0x1ae)]=_0xea88b(0x18a),_0x482dba[_0xea88b(0x143)]=_0x531d70[_0xea88b(0x147)],_0x2de3a8=_0x335174[_0xea88b(0x1c6)][_0xea88b(0x158)],_0x335174[_0xea88b(0x1c6)][_0xea88b(0x158)]=_0x482dba,_0x18fc0b[_0xea88b(0x180)](_0x482dba,_0x335174);}if(_0x40b08d&&_0x40b08d[_0x56b1ee(0x138)])_0x3bc4ff(_0x40b08d,_0x684b73,_0x2084ac);else try{_0x2084ac[_0x56b1ee(0x113)]++,_0x2084ac[_0x56b1ee(0x131)]&&_0x2084ac[_0x56b1ee(0x130)][_0x56b1ee(0x16c)](_0x40b08d);var _0x53289c,_0x56dcaa,_0x3f1bac,_0x2c5390,_0x587de7=[],_0x27826c=[],_0x538ce8,_0x509de2=this['_type'](_0x40b08d),_0x4ebf4a=_0x509de2===_0x56b1ee(0x13d),_0x17b031=!0x1,_0x54de89=_0x509de2==='function',_0x12042c=this[_0x56b1ee(0x199)](_0x509de2),_0x4d03e1=this[_0x56b1ee(0x102)](_0x509de2),_0x129831=_0x12042c||_0x4d03e1,_0x16ba8c={},_0xa9b097=0x0,_0x43366c=!0x1,_0x2de3a8,_0xe0b961=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x2084ac[_0x56b1ee(0x12b)]){if(_0x4ebf4a){if(_0x56dcaa=_0x40b08d['length'],_0x56dcaa>_0x2084ac[_0x56b1ee(0xf4)]){for(_0x3f1bac=0x0,_0x2c5390=_0x2084ac[_0x56b1ee(0xf4)],_0x53289c=_0x3f1bac;_0x53289c<_0x2c5390;_0x53289c++)_0x27826c[_0x56b1ee(0x16c)](_0x18fc0b[_0x56b1ee(0xea)](_0x587de7,_0x40b08d,_0x509de2,_0x53289c,_0x2084ac));_0x684b73['cappedElements']=!0x0;}else{for(_0x3f1bac=0x0,_0x2c5390=_0x56dcaa,_0x53289c=_0x3f1bac;_0x53289c<_0x2c5390;_0x53289c++)_0x27826c[_0x56b1ee(0x16c)](_0x18fc0b[_0x56b1ee(0xea)](_0x587de7,_0x40b08d,_0x509de2,_0x53289c,_0x2084ac));}_0x2084ac[_0x56b1ee(0xec)]+=_0x27826c['length'];}if(!(_0x509de2===_0x56b1ee(0x18f)||_0x509de2==='undefined')&&!_0x12042c&&_0x509de2!=='String'&&_0x509de2!==_0x56b1ee(0x16e)&&_0x509de2!==_0x56b1ee(0x188)){var _0x1f65bc=_0x424268[_0x56b1ee(0x1bb)]||_0x2084ac[_0x56b1ee(0x1bb)];if(this['_isSet'](_0x40b08d)?(_0x53289c=0x0,_0x40b08d[_0x56b1ee(0x178)](function(_0x367cec){var _0x1936cd=_0x56b1ee;if(_0xa9b097++,_0x2084ac['autoExpandPropertyCount']++,_0xa9b097>_0x1f65bc){_0x43366c=!0x0;return;}if(!_0x2084ac[_0x1936cd(0x152)]&&_0x2084ac['autoExpand']&&_0x2084ac[_0x1936cd(0xec)]>_0x2084ac['autoExpandLimit']){_0x43366c=!0x0;return;}_0x27826c[_0x1936cd(0x16c)](_0x18fc0b['_addProperty'](_0x587de7,_0x40b08d,_0x1936cd(0x128),_0x53289c++,_0x2084ac,function(_0x599f7b){return function(){return _0x599f7b;};}(_0x367cec)));})):this[_0x56b1ee(0x181)](_0x40b08d)&&_0x40b08d[_0x56b1ee(0x178)](function(_0x56786e,_0x4c5f08){var _0x5ac097=_0x56b1ee;if(_0xa9b097++,_0x2084ac[_0x5ac097(0xec)]++,_0xa9b097>_0x1f65bc){_0x43366c=!0x0;return;}if(!_0x2084ac[_0x5ac097(0x152)]&&_0x2084ac['autoExpand']&&_0x2084ac[_0x5ac097(0xec)]>_0x2084ac['autoExpandLimit']){_0x43366c=!0x0;return;}var _0x1adddf=_0x4c5f08[_0x5ac097(0x132)]();_0x1adddf[_0x5ac097(0x141)]>0x64&&(_0x1adddf=_0x1adddf[_0x5ac097(0x1c5)](0x0,0x64)+_0x5ac097(0x18b)),_0x27826c['push'](_0x18fc0b[_0x5ac097(0xea)](_0x587de7,_0x40b08d,_0x5ac097(0x1be),_0x1adddf,_0x2084ac,function(_0x4120a8){return function(){return _0x4120a8;};}(_0x56786e)));}),!_0x17b031){try{for(_0x538ce8 in _0x40b08d)if(!(_0x4ebf4a&&_0xe0b961['test'](_0x538ce8))&&!this['_blacklistedProperty'](_0x40b08d,_0x538ce8,_0x2084ac)){if(_0xa9b097++,_0x2084ac[_0x56b1ee(0xec)]++,_0xa9b097>_0x1f65bc){_0x43366c=!0x0;break;}if(!_0x2084ac[_0x56b1ee(0x152)]&&_0x2084ac[_0x56b1ee(0x131)]&&_0x2084ac[_0x56b1ee(0xec)]>_0x2084ac[_0x56b1ee(0x1a0)]){_0x43366c=!0x0;break;}_0x27826c[_0x56b1ee(0x16c)](_0x18fc0b[_0x56b1ee(0x153)](_0x587de7,_0x16ba8c,_0x40b08d,_0x509de2,_0x538ce8,_0x2084ac));}}catch{}if(_0x16ba8c[_0x56b1ee(0x17e)]=!0x0,_0x54de89&&(_0x16ba8c[_0x56b1ee(0x14b)]=!0x0),!_0x43366c){var _0x1aa050=[][_0x56b1ee(0x13a)](this[_0x56b1ee(0x16a)](_0x40b08d))[_0x56b1ee(0x13a)](this['_getOwnPropertySymbols'](_0x40b08d));for(_0x53289c=0x0,_0x56dcaa=_0x1aa050[_0x56b1ee(0x141)];_0x53289c<_0x56dcaa;_0x53289c++)if(_0x538ce8=_0x1aa050[_0x53289c],!(_0x4ebf4a&&_0xe0b961['test'](_0x538ce8[_0x56b1ee(0x132)]()))&&!this[_0x56b1ee(0x159)](_0x40b08d,_0x538ce8,_0x2084ac)&&!_0x16ba8c['_p_'+_0x538ce8[_0x56b1ee(0x132)]()]){if(_0xa9b097++,_0x2084ac[_0x56b1ee(0xec)]++,_0xa9b097>_0x1f65bc){_0x43366c=!0x0;break;}if(!_0x2084ac['isExpressionToEvaluate']&&_0x2084ac[_0x56b1ee(0x131)]&&_0x2084ac[_0x56b1ee(0xec)]>_0x2084ac[_0x56b1ee(0x1a0)]){_0x43366c=!0x0;break;}_0x27826c[_0x56b1ee(0x16c)](_0x18fc0b[_0x56b1ee(0x153)](_0x587de7,_0x16ba8c,_0x40b08d,_0x509de2,_0x538ce8,_0x2084ac));}}}}}if(_0x684b73['type']=_0x509de2,_0x129831?(_0x684b73[_0x56b1ee(0x1b0)]=_0x40b08d[_0x56b1ee(0xfb)](),this[_0x56b1ee(0x117)](_0x509de2,_0x684b73,_0x2084ac,_0x424268)):_0x509de2==='date'?_0x684b73['value']=this[_0x56b1ee(0xf0)][_0x56b1ee(0x1b7)](_0x40b08d):_0x509de2===_0x56b1ee(0x145)?_0x684b73[_0x56b1ee(0x1b0)]=this[_0x56b1ee(0x176)][_0x56b1ee(0x1b7)](_0x40b08d):_0x509de2===_0x56b1ee(0x191)&&this[_0x56b1ee(0x12a)]?_0x684b73[_0x56b1ee(0x1b0)]=this[_0x56b1ee(0x12a)][_0x56b1ee(0x1aa)][_0x56b1ee(0x132)][_0x56b1ee(0x1b7)](_0x40b08d):!_0x2084ac[_0x56b1ee(0x12b)]&&!(_0x509de2==='null'||_0x509de2==='undefined')&&(delete _0x684b73['value'],_0x684b73['capped']=!0x0),_0x43366c&&(_0x684b73[_0x56b1ee(0x137)]=!0x0),_0x2de3a8=_0x2084ac['node'][_0x56b1ee(0x158)],_0x2084ac[_0x56b1ee(0x1c6)][_0x56b1ee(0x158)]=_0x684b73,this['_treeNodePropertiesBeforeFullValue'](_0x684b73,_0x2084ac),_0x27826c[_0x56b1ee(0x141)]){for(_0x53289c=0x0,_0x56dcaa=_0x27826c['length'];_0x53289c<_0x56dcaa;_0x53289c++)_0x27826c[_0x53289c](_0x53289c);}_0x587de7[_0x56b1ee(0x141)]&&(_0x684b73['props']=_0x587de7);}catch(_0x495420){_0x3bc4ff(_0x495420,_0x684b73,_0x2084ac);}return this[_0x56b1ee(0xf9)](_0x40b08d,_0x684b73),this['_treeNodePropertiesAfterFullValue'](_0x684b73,_0x2084ac),_0x2084ac[_0x56b1ee(0x1c6)][_0x56b1ee(0x158)]=_0x2de3a8,_0x2084ac[_0x56b1ee(0x113)]--,_0x2084ac['autoExpand']=_0x4dfc52,_0x2084ac[_0x56b1ee(0x131)]&&_0x2084ac[_0x56b1ee(0x130)][_0x56b1ee(0x166)](),_0x684b73;}[_0x582a5f(0x140)](_0xfe0b88){var _0xcd569d=_0x582a5f;return Object[_0xcd569d(0x108)]?Object[_0xcd569d(0x108)](_0xfe0b88):[];}['_isSet'](_0x52efa4){var _0x4fadc8=_0x582a5f;return!!(_0x52efa4&&_0x5a79f4[_0x4fadc8(0x128)]&&this[_0x4fadc8(0x19c)](_0x52efa4)==='[object\\\\x20Set]'&&_0x52efa4[_0x4fadc8(0x178)]);}[_0x582a5f(0x159)](_0x5a7792,_0x258281,_0x2436a6){var _0x7d9713=_0x582a5f;return _0x2436a6['noFunctions']?typeof _0x5a7792[_0x258281]==_0x7d9713(0xe8):!0x1;}['_type'](_0x3f4ed7){var _0x4ed605=_0x582a5f,_0x3a5a2f='';return _0x3a5a2f=typeof _0x3f4ed7,_0x3a5a2f===_0x4ed605(0x107)?this[_0x4ed605(0x19c)](_0x3f4ed7)==='[object\\\\x20Array]'?_0x3a5a2f=_0x4ed605(0x13d):this[_0x4ed605(0x19c)](_0x3f4ed7)===_0x4ed605(0x1c2)?_0x3a5a2f=_0x4ed605(0x155):_0x3f4ed7===null?_0x3a5a2f='null':_0x3f4ed7[_0x4ed605(0x1a4)]&&(_0x3a5a2f=_0x3f4ed7[_0x4ed605(0x1a4)]['name']||_0x3a5a2f):_0x3a5a2f===_0x4ed605(0x156)&&this[_0x4ed605(0x101)]&&_0x3f4ed7 instanceof this[_0x4ed605(0x101)]&&(_0x3a5a2f=_0x4ed605(0x14e)),_0x3a5a2f;}[_0x582a5f(0x19c)](_0x5643ee){var _0x2b8d5c=_0x582a5f;return Object[_0x2b8d5c(0x1aa)][_0x2b8d5c(0x132)][_0x2b8d5c(0x1b7)](_0x5643ee);}[_0x582a5f(0x199)](_0xe02f7f){var _0x1451d3=_0x582a5f;return _0xe02f7f===_0x1451d3(0xf3)||_0xe02f7f===_0x1451d3(0x103)||_0xe02f7f===_0x1451d3(0x12f);}['_isPrimitiveWrapperType'](_0x828bbe){var _0x1e631f=_0x582a5f;return _0x828bbe===_0x1e631f(0x139)||_0x828bbe===_0x1e631f(0x198)||_0x828bbe===_0x1e631f(0x15b);}[_0x582a5f(0xea)](_0x3b9ab7,_0x5d3eb0,_0x35fcbd,_0x17bd88,_0x2e756a,_0x227602){var _0x2d276=this;return function(_0x44ad5b){var _0x190d8f=_0x1e59,_0x1f4950=_0x2e756a[_0x190d8f(0x1c6)][_0x190d8f(0x158)],_0x7960f=_0x2e756a[_0x190d8f(0x1c6)][_0x190d8f(0x175)],_0x4f3ec7=_0x2e756a[_0x190d8f(0x1c6)][_0x190d8f(0x162)];_0x2e756a[_0x190d8f(0x1c6)][_0x190d8f(0x162)]=_0x1f4950,_0x2e756a[_0x190d8f(0x1c6)][_0x190d8f(0x175)]=typeof _0x17bd88==_0x190d8f(0x12f)?_0x17bd88:_0x44ad5b,_0x3b9ab7[_0x190d8f(0x16c)](_0x2d276[_0x190d8f(0x1a9)](_0x5d3eb0,_0x35fcbd,_0x17bd88,_0x2e756a,_0x227602)),_0x2e756a['node']['parent']=_0x4f3ec7,_0x2e756a['node'][_0x190d8f(0x175)]=_0x7960f;};}['_addObjectProperty'](_0x130244,_0xd9c109,_0x319860,_0xd0e4c6,_0x62b55f,_0x564e16,_0x340cf5){var _0x575f3d=_0x582a5f,_0x15b0aa=this;return _0xd9c109[_0x575f3d(0x126)+_0x62b55f[_0x575f3d(0x132)]()]=!0x0,function(_0x275534){var _0x400cfd=_0x575f3d,_0x2e4c09=_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x158)],_0x5a4131=_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x175)],_0x350a6d=_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x162)];_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x162)]=_0x2e4c09,_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x175)]=_0x275534,_0x130244[_0x400cfd(0x16c)](_0x15b0aa[_0x400cfd(0x1a9)](_0x319860,_0xd0e4c6,_0x62b55f,_0x564e16,_0x340cf5)),_0x564e16[_0x400cfd(0x1c6)][_0x400cfd(0x162)]=_0x350a6d,_0x564e16['node']['index']=_0x5a4131;};}['_property'](_0x1ba119,_0x349be6,_0x25f612,_0x35ed9a,_0x2f04ed){var _0x1d18b5=_0x582a5f,_0x39dad5=this;_0x2f04ed||(_0x2f04ed=function(_0xbf1190,_0x15fcf1){return _0xbf1190[_0x15fcf1];});var _0x4f2f6f=_0x25f612['toString'](),_0x2533f6=_0x35ed9a[_0x1d18b5(0x163)]||{},_0x1de289=_0x35ed9a[_0x1d18b5(0x12b)],_0x2097cc=_0x35ed9a[_0x1d18b5(0x152)];try{var _0x45bd9c=this[_0x1d18b5(0x181)](_0x1ba119),_0x5316f6=_0x4f2f6f;_0x45bd9c&&_0x5316f6[0x0]==='\\\\x27'&&(_0x5316f6=_0x5316f6[_0x1d18b5(0xfe)](0x1,_0x5316f6[_0x1d18b5(0x141)]-0x2));var _0x1f49be=_0x35ed9a[_0x1d18b5(0x163)]=_0x2533f6[_0x1d18b5(0x126)+_0x5316f6];_0x1f49be&&(_0x35ed9a['depth']=_0x35ed9a['depth']+0x1),_0x35ed9a[_0x1d18b5(0x152)]=!!_0x1f49be;var _0x3b6449=typeof _0x25f612==_0x1d18b5(0x191),_0x42c6d4={'name':_0x3b6449||_0x45bd9c?_0x4f2f6f:this[_0x1d18b5(0x142)](_0x4f2f6f)};if(_0x3b6449&&(_0x42c6d4[_0x1d18b5(0x191)]=!0x0),!(_0x349be6===_0x1d18b5(0x13d)||_0x349be6===_0x1d18b5(0x190))){var _0xa23ed0=this[_0x1d18b5(0x1b3)](_0x1ba119,_0x25f612);if(_0xa23ed0&&(_0xa23ed0[_0x1d18b5(0x1a1)]&&(_0x42c6d4[_0x1d18b5(0x14d)]=!0x0),_0xa23ed0['get']&&!_0x1f49be&&!_0x35ed9a['resolveGetters']))return _0x42c6d4['getter']=!0x0,this['_processTreeNodeResult'](_0x42c6d4,_0x35ed9a),_0x42c6d4;}var _0x24fdc9;try{_0x24fdc9=_0x2f04ed(_0x1ba119,_0x25f612);}catch(_0x5c4ede){return _0x42c6d4={'name':_0x4f2f6f,'type':_0x1d18b5(0x18a),'error':_0x5c4ede[_0x1d18b5(0x147)]},this['_processTreeNodeResult'](_0x42c6d4,_0x35ed9a),_0x42c6d4;}var _0x257cc3=this[_0x1d18b5(0xf8)](_0x24fdc9),_0x4d125d=this[_0x1d18b5(0x199)](_0x257cc3);if(_0x42c6d4[_0x1d18b5(0x1ae)]=_0x257cc3,_0x4d125d)this['_processTreeNodeResult'](_0x42c6d4,_0x35ed9a,_0x24fdc9,function(){var _0x139f8f=_0x1d18b5;_0x42c6d4['value']=_0x24fdc9[_0x139f8f(0xfb)](),!_0x1f49be&&_0x39dad5['_capIfString'](_0x257cc3,_0x42c6d4,_0x35ed9a,{});});else{var _0x228df6=_0x35ed9a['autoExpand']&&_0x35ed9a[_0x1d18b5(0x113)]<_0x35ed9a[_0x1d18b5(0x13e)]&&_0x35ed9a[_0x1d18b5(0x130)][_0x1d18b5(0x12e)](_0x24fdc9)<0x0&&_0x257cc3!==_0x1d18b5(0xe8)&&_0x35ed9a[_0x1d18b5(0xec)]<_0x35ed9a[_0x1d18b5(0x1a0)];_0x228df6||_0x35ed9a[_0x1d18b5(0x113)]<_0x1de289||_0x1f49be?(this[_0x1d18b5(0x105)](_0x42c6d4,_0x24fdc9,_0x35ed9a,_0x1f49be||{}),this[_0x1d18b5(0xf9)](_0x24fdc9,_0x42c6d4)):this[_0x1d18b5(0x193)](_0x42c6d4,_0x35ed9a,_0x24fdc9,function(){var _0x16098f=_0x1d18b5;_0x257cc3===_0x16098f(0x18f)||_0x257cc3==='undefined'||(delete _0x42c6d4[_0x16098f(0x1b0)],_0x42c6d4[_0x16098f(0x14a)]=!0x0);});}return _0x42c6d4;}finally{_0x35ed9a[_0x1d18b5(0x163)]=_0x2533f6,_0x35ed9a[_0x1d18b5(0x12b)]=_0x1de289,_0x35ed9a[_0x1d18b5(0x152)]=_0x2097cc;}}[_0x582a5f(0x117)](_0x3f7023,_0x30d35c,_0x4a91ed,_0x11a5ba){var _0x49a606=_0x582a5f,_0x328c8e=_0x11a5ba[_0x49a606(0xed)]||_0x4a91ed[_0x49a606(0xed)];if((_0x3f7023==='string'||_0x3f7023==='String')&&_0x30d35c[_0x49a606(0x1b0)]){let _0x41f673=_0x30d35c['value'][_0x49a606(0x141)];_0x4a91ed['allStrLength']+=_0x41f673,_0x4a91ed[_0x49a606(0x16f)]>_0x4a91ed[_0x49a606(0x167)]?(_0x30d35c[_0x49a606(0x14a)]='',delete _0x30d35c[_0x49a606(0x1b0)]):_0x41f673>_0x328c8e&&(_0x30d35c['capped']=_0x30d35c[_0x49a606(0x1b0)][_0x49a606(0xfe)](0x0,_0x328c8e),delete _0x30d35c[_0x49a606(0x1b0)]);}}[_0x582a5f(0x181)](_0xe21256){var _0x533063=_0x582a5f;return!!(_0xe21256&&_0x5a79f4['Map']&&this[_0x533063(0x19c)](_0xe21256)===_0x533063(0x15f)&&_0xe21256[_0x533063(0x178)]);}['_propertyName'](_0x3bf0a5){var _0x16fdf0=_0x582a5f;if(_0x3bf0a5['match'](/^\\\\d+$/))return _0x3bf0a5;var _0x3bbaed;try{_0x3bbaed=JSON[_0x16fdf0(0x151)](''+_0x3bf0a5);}catch{_0x3bbaed='\\\\x22'+this[_0x16fdf0(0x19c)](_0x3bf0a5)+'\\\\x22';}return _0x3bbaed[_0x16fdf0(0x11e)](/^\\\"([a-zA-Z_][a-zA-Z_0-9]*)\\\"$/)?_0x3bbaed=_0x3bbaed[_0x16fdf0(0xfe)](0x1,_0x3bbaed[_0x16fdf0(0x141)]-0x2):_0x3bbaed=_0x3bbaed[_0x16fdf0(0x13f)](/'/g,'\\\\x5c\\\\x27')[_0x16fdf0(0x13f)](/\\\\\\\\\\\"/g,'\\\\x22')[_0x16fdf0(0x13f)](/(^\\\"|\\\"$)/g,'\\\\x27'),_0x3bbaed;}[_0x582a5f(0x193)](_0x56823e,_0x285b41,_0x417adb,_0x287a6a){var _0xcc6d0d=_0x582a5f;this[_0xcc6d0d(0x180)](_0x56823e,_0x285b41),_0x287a6a&&_0x287a6a(),this[_0xcc6d0d(0xf9)](_0x417adb,_0x56823e),this[_0xcc6d0d(0x174)](_0x56823e,_0x285b41);}[_0x582a5f(0x180)](_0x4b8db4,_0x4929d2){var _0x81a071=_0x582a5f;this[_0x81a071(0x1a8)](_0x4b8db4,_0x4929d2),this['_setNodeQueryPath'](_0x4b8db4,_0x4929d2),this['_setNodeExpressionPath'](_0x4b8db4,_0x4929d2),this[_0x81a071(0x18c)](_0x4b8db4,_0x4929d2);}[_0x582a5f(0x1a8)](_0x4e467c,_0x1812d0){}[_0x582a5f(0x196)](_0x4e63c2,_0x2a62fb){}[_0x582a5f(0x182)](_0x291f16,_0x393338){}[_0x582a5f(0x13c)](_0x3fc2f2){var _0x33f1bf=_0x582a5f;return _0x3fc2f2===this[_0x33f1bf(0x1ad)];}[_0x582a5f(0x174)](_0xd15478,_0x519eae){var _0x3efd93=_0x582a5f;this[_0x3efd93(0x182)](_0xd15478,_0x519eae),this[_0x3efd93(0x10f)](_0xd15478),_0x519eae[_0x3efd93(0xfd)]&&this[_0x3efd93(0x100)](_0xd15478),this[_0x3efd93(0x184)](_0xd15478,_0x519eae),this[_0x3efd93(0x1c0)](_0xd15478,_0x519eae),this[_0x3efd93(0x1bf)](_0xd15478);}[_0x582a5f(0xf9)](_0x14dd9a,_0x3ba4b1){var _0x5c3136=_0x582a5f;try{_0x14dd9a&&typeof _0x14dd9a[_0x5c3136(0x141)]=='number'&&(_0x3ba4b1[_0x5c3136(0x141)]=_0x14dd9a[_0x5c3136(0x141)]);}catch{}if(_0x3ba4b1[_0x5c3136(0x1ae)]==='number'||_0x3ba4b1[_0x5c3136(0x1ae)]==='Number'){if(isNaN(_0x3ba4b1['value']))_0x3ba4b1['nan']=!0x0,delete _0x3ba4b1[_0x5c3136(0x1b0)];else switch(_0x3ba4b1['value']){case Number[_0x5c3136(0x17c)]:_0x3ba4b1[_0x5c3136(0x10a)]=!0x0,delete _0x3ba4b1[_0x5c3136(0x1b0)];break;case Number['NEGATIVE_INFINITY']:_0x3ba4b1[_0x5c3136(0x10e)]=!0x0,delete _0x3ba4b1[_0x5c3136(0x1b0)];break;case 0x0:this['_isNegativeZero'](_0x3ba4b1[_0x5c3136(0x1b0)])&&(_0x3ba4b1[_0x5c3136(0x12d)]=!0x0);break;}}else _0x3ba4b1[_0x5c3136(0x1ae)]==='function'&&typeof _0x14dd9a['name']==_0x5c3136(0x103)&&_0x14dd9a[_0x5c3136(0x187)]&&_0x3ba4b1['name']&&_0x14dd9a[_0x5c3136(0x187)]!==_0x3ba4b1['name']&&(_0x3ba4b1[_0x5c3136(0x18d)]=_0x14dd9a['name']);}[_0x582a5f(0x1b8)](_0x550234){return 0x1/_0x550234===Number['NEGATIVE_INFINITY'];}[_0x582a5f(0x100)](_0x3aaefa){var _0x56eb5e=_0x582a5f;!_0x3aaefa[_0x56eb5e(0x1bb)]||!_0x3aaefa[_0x56eb5e(0x1bb)][_0x56eb5e(0x141)]||_0x3aaefa[_0x56eb5e(0x1ae)]===_0x56eb5e(0x13d)||_0x3aaefa[_0x56eb5e(0x1ae)]===_0x56eb5e(0x1be)||_0x3aaefa[_0x56eb5e(0x1ae)]===_0x56eb5e(0x128)||_0x3aaefa[_0x56eb5e(0x1bb)][_0x56eb5e(0x122)](function(_0x3bbc68,_0x41cf9d){var _0x5b2df8=_0x56eb5e,_0x588b37=_0x3bbc68[_0x5b2df8(0x187)]['toLowerCase'](),_0x1902bb=_0x41cf9d[_0x5b2df8(0x187)]['toLowerCase']();return _0x588b37<_0x1902bb?-0x1:_0x588b37>_0x1902bb?0x1:0x0;});}[_0x582a5f(0x184)](_0xac1d8,_0x3f06d6){var _0x1242f6=_0x582a5f;if(!(_0x3f06d6['noFunctions']||!_0xac1d8[_0x1242f6(0x1bb)]||!_0xac1d8[_0x1242f6(0x1bb)][_0x1242f6(0x141)])){for(var _0x1d4e20=[],_0xaebb13=[],_0x3f0c7e=0x0,_0x38822e=_0xac1d8['props']['length'];_0x3f0c7e<_0x38822e;_0x3f0c7e++){var _0x54f263=_0xac1d8['props'][_0x3f0c7e];_0x54f263['type']===_0x1242f6(0xe8)?_0x1d4e20[_0x1242f6(0x16c)](_0x54f263):_0xaebb13[_0x1242f6(0x16c)](_0x54f263);}if(!(!_0xaebb13['length']||_0x1d4e20['length']<=0x1)){_0xac1d8[_0x1242f6(0x1bb)]=_0xaebb13;var _0x4db175={'functionsNode':!0x0,'props':_0x1d4e20};this['_setNodeId'](_0x4db175,_0x3f06d6),this['_setNodeLabel'](_0x4db175,_0x3f06d6),this[_0x1242f6(0x10f)](_0x4db175),this[_0x1242f6(0x18c)](_0x4db175,_0x3f06d6),_0x4db175['id']+='\\\\x20f',_0xac1d8['props']['unshift'](_0x4db175);}}}['_addLoadNode'](_0x38851a,_0x43e3b5){}[_0x582a5f(0x10f)](_0x2aad46){}[_0x582a5f(0x1a7)](_0x4a0693){var _0x34ddd0=_0x582a5f;return Array[_0x34ddd0(0x125)](_0x4a0693)||typeof _0x4a0693==_0x34ddd0(0x107)&&this[_0x34ddd0(0x19c)](_0x4a0693)===_0x34ddd0(0x19a);}[_0x582a5f(0x18c)](_0x4be131,_0x15732e){}[_0x582a5f(0x1bf)](_0x3d175d){var _0x407640=_0x582a5f;delete _0x3d175d['_hasSymbolPropertyOnItsPath'],delete _0x3d175d[_0x407640(0x1af)],delete _0x3d175d[_0x407640(0x15e)];}[_0x582a5f(0x11a)](_0x14c68b,_0x1ef00b){}[_0x582a5f(0x136)](_0x50967b){var _0x3e7be2=_0x582a5f;return _0x50967b?_0x50967b[_0x3e7be2(0x11e)](this[_0x3e7be2(0x11b)])?'['+_0x50967b+']':_0x50967b[_0x3e7be2(0x11e)](this[_0x3e7be2(0x1b6)])?'.'+_0x50967b:_0x50967b[_0x3e7be2(0x11e)](this[_0x3e7be2(0x19f)])?'['+_0x50967b+']':'[\\\\x27'+_0x50967b+'\\\\x27]':'';}}let _0x331db6=new _0x1ed8a8();function _0x8784b0(_0x195392,_0x1683f7,_0x50ba87,_0x523b5d,_0x2b7c8b,_0x5bb8db){var _0x2347f3=_0x582a5f;let _0x5f0c43,_0x1e9fa6;try{_0x1e9fa6=_0xb8c436(),_0x5f0c43=_0x1a495c[_0x1683f7],!_0x5f0c43||_0x1e9fa6-_0x5f0c43['ts']>0x1f4&&_0x5f0c43['count']&&_0x5f0c43['time']/_0x5f0c43[_0x2347f3(0x112)]<0x64?(_0x1a495c[_0x1683f7]=_0x5f0c43={'count':0x0,'time':0x0,'ts':_0x1e9fa6},_0x1a495c['hits']={}):_0x1e9fa6-_0x1a495c[_0x2347f3(0x106)]['ts']>0x32&&_0x1a495c['hits'][_0x2347f3(0x112)]&&_0x1a495c[_0x2347f3(0x106)][_0x2347f3(0x1c1)]/_0x1a495c['hits']['count']<0x64&&(_0x1a495c['hits']={});let _0x16e561=[],_0x128475=_0x5f0c43[_0x2347f3(0x104)]||_0x1a495c[_0x2347f3(0x106)][_0x2347f3(0x104)]?_0xc7aa2a:_0x481166,_0x2960fc=_0x3f3cff=>{var _0x268697=_0x2347f3;let _0x569e78={};return _0x569e78[_0x268697(0x1bb)]=_0x3f3cff['props'],_0x569e78[_0x268697(0xf4)]=_0x3f3cff[_0x268697(0xf4)],_0x569e78['strLength']=_0x3f3cff[_0x268697(0xed)],_0x569e78[_0x268697(0x167)]=_0x3f3cff['totalStrLength'],_0x569e78[_0x268697(0x1a0)]=_0x3f3cff[_0x268697(0x1a0)],_0x569e78[_0x268697(0x13e)]=_0x3f3cff['autoExpandMaxDepth'],_0x569e78[_0x268697(0xfd)]=!0x1,_0x569e78['noFunctions']=!_0x2932ea,_0x569e78[_0x268697(0x12b)]=0x1,_0x569e78[_0x268697(0x113)]=0x0,_0x569e78['expId']=_0x268697(0xe9),_0x569e78[_0x268697(0xfa)]=_0x268697(0x11f),_0x569e78[_0x268697(0x131)]=!0x0,_0x569e78[_0x268697(0x130)]=[],_0x569e78['autoExpandPropertyCount']=0x0,_0x569e78[_0x268697(0x1a2)]=!0x0,_0x569e78[_0x268697(0x16f)]=0x0,_0x569e78['node']={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x569e78;};for(var _0x1af2da=0x0;_0x1af2da<_0x2b7c8b[_0x2347f3(0x141)];_0x1af2da++)_0x16e561[_0x2347f3(0x16c)](_0x331db6[_0x2347f3(0x105)]({'timeNode':_0x195392==='time'||void 0x0},_0x2b7c8b[_0x1af2da],_0x2960fc(_0x128475),{}));if(_0x195392===_0x2347f3(0x134)){let _0x26dbb8=Error[_0x2347f3(0x118)];try{Error[_0x2347f3(0x118)]=0x1/0x0,_0x16e561[_0x2347f3(0x16c)](_0x331db6[_0x2347f3(0x105)]({'stackNode':!0x0},new Error()['stack'],_0x2960fc(_0x128475),{'strLength':0x1/0x0}));}finally{Error[_0x2347f3(0x118)]=_0x26dbb8;}}return{'method':_0x2347f3(0x10d),'version':_0x394eca,'args':[{'ts':_0x50ba87,'session':_0x523b5d,'args':_0x16e561,'id':_0x1683f7,'context':_0x5bb8db}]};}catch(_0x127ec8){return{'method':_0x2347f3(0x10d),'version':_0x394eca,'args':[{'ts':_0x50ba87,'session':_0x523b5d,'args':[{'type':_0x2347f3(0x18a),'error':_0x127ec8&&_0x127ec8[_0x2347f3(0x147)]}],'id':_0x1683f7,'context':_0x5bb8db}]};}finally{try{if(_0x5f0c43&&_0x1e9fa6){let _0x3a20c8=_0xb8c436();_0x5f0c43[_0x2347f3(0x112)]++,_0x5f0c43[_0x2347f3(0x1c1)]+=_0x5b7ec7(_0x1e9fa6,_0x3a20c8),_0x5f0c43['ts']=_0x3a20c8,_0x1a495c[_0x2347f3(0x106)][_0x2347f3(0x112)]++,_0x1a495c[_0x2347f3(0x106)][_0x2347f3(0x1c1)]+=_0x5b7ec7(_0x1e9fa6,_0x3a20c8),_0x1a495c['hits']['ts']=_0x3a20c8,(_0x5f0c43[_0x2347f3(0x112)]>0x32||_0x5f0c43[_0x2347f3(0x1c1)]>0x64)&&(_0x5f0c43[_0x2347f3(0x104)]=!0x0),(_0x1a495c[_0x2347f3(0x106)][_0x2347f3(0x112)]>0x3e8||_0x1a495c[_0x2347f3(0x106)]['time']>0x12c)&&(_0x1a495c[_0x2347f3(0x106)]['reduceLimits']=!0x0);}}catch{}}}return _0x5a79f4[_0x582a5f(0x14f)];})(globalThis,_0x362114(0x194),'61502',_0x362114(0x110),'webpack','1.0.0',_0x362114(0x169),_0x362114(0x1b5),'');\");}catch(e){}};function oo_oo(i,...v){try{oo_cm().consoleLog(i, v);}catch(e){} return v};function oo_tr(i,...v){try{oo_cm().consoleTrace(i, v);}catch(e){} return v};function oo_ts(){try{oo_cm().consoleTime();}catch(e){}};function oo_te(){try{oo_cm().consoleTimeEnd();}catch(e){}};/*eslint eslint-comments/disable-enable-pair:,eslint-comments/no-unlimited-disable:,eslint-comments/no-aggregating-enable:,eslint-comments/no-duplicate-disable:,eslint-comments/no-unused-disable:,eslint-comments/no-unused-enable:,*/","C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\MessagePopup.js",["438"],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\isAuth.js",[],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\EmailInput.js",[],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\PasswordInput.js",[],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\apiList.js",[],"C:\\Users\\RAHUL\\Desktop\\web_based_recuritment_portal\\frontend\\src\\lib\\FileUploadInput.js",[],{"ruleId":"439","replacedBy":"440"},{"ruleId":"441","replacedBy":"442"},{"ruleId":"443","severity":1,"message":"444","line":19,"column":8,"nodeType":"445","messageId":"446","endLine":19,"endColumn":14},{"ruleId":"443","severity":1,"message":"447","line":4,"column":3,"nodeType":"445","messageId":"446","endLine":4,"endColumn":12},{"ruleId":"448","severity":1,"message":"449","line":16,"column":6,"nodeType":"450","endLine":16,"endColumn":8,"suggestions":"451"},{"ruleId":"443","severity":1,"message":"452","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":8},{"ruleId":"453","severity":1,"message":"454","line":459,"column":32,"nodeType":"455","messageId":"456","endLine":459,"endColumn":34},{"ruleId":"443","severity":1,"message":"457","line":1,"column":22,"nodeType":"445","messageId":"446","endLine":1,"endColumn":31},{"ruleId":"443","severity":1,"message":"458","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":8},{"ruleId":"443","severity":1,"message":"459","line":7,"column":3,"nodeType":"445","messageId":"446","endLine":7,"endColumn":17},{"ruleId":"443","severity":1,"message":"447","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":12},{"ruleId":"443","severity":1,"message":"460","line":13,"column":3,"nodeType":"445","messageId":"446","endLine":13,"endColumn":9},{"ruleId":"443","severity":1,"message":"461","line":14,"column":3,"nodeType":"445","messageId":"446","endLine":14,"endColumn":19},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"463","line":16,"column":3,"nodeType":"445","messageId":"446","endLine":16,"endColumn":11},{"ruleId":"443","severity":1,"message":"464","line":20,"column":10,"nodeType":"445","messageId":"446","endLine":20,"endColumn":19},{"ruleId":"443","severity":1,"message":"465","line":450,"column":9,"nodeType":"445","messageId":"446","endLine":450,"endColumn":17},{"ruleId":"448","severity":1,"message":"466","line":717,"column":6,"nodeType":"450","endLine":717,"endColumn":8,"suggestions":"467"},{"ruleId":"443","severity":1,"message":"468","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":13},{"ruleId":"443","severity":1,"message":"459","line":7,"column":3,"nodeType":"445","messageId":"446","endLine":7,"endColumn":17},{"ruleId":"443","severity":1,"message":"447","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":12},{"ruleId":"443","severity":1,"message":"460","line":13,"column":3,"nodeType":"445","messageId":"446","endLine":13,"endColumn":9},{"ruleId":"443","severity":1,"message":"461","line":14,"column":3,"nodeType":"445","messageId":"446","endLine":14,"endColumn":19},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"463","line":16,"column":3,"nodeType":"445","messageId":"446","endLine":16,"endColumn":11},{"ruleId":"443","severity":1,"message":"469","line":17,"column":3,"nodeType":"445","messageId":"446","endLine":17,"endColumn":11},{"ruleId":"448","severity":1,"message":"466","line":229,"column":6,"nodeType":"450","endLine":229,"endColumn":8,"suggestions":"470"},{"ruleId":"443","severity":1,"message":"458","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":8},{"ruleId":"443","severity":1,"message":"471","line":109,"column":10,"nodeType":"445","messageId":"446","endLine":109,"endColumn":18},{"ruleId":"443","severity":1,"message":"472","line":109,"column":20,"nodeType":"445","messageId":"446","endLine":109,"endColumn":31},{"ruleId":"443","severity":1,"message":"473","line":110,"column":10,"nodeType":"445","messageId":"446","endLine":110,"endColumn":14},{"ruleId":"448","severity":1,"message":"466","line":137,"column":6,"nodeType":"450","endLine":137,"endColumn":8,"suggestions":"474"},{"ruleId":"443","severity":1,"message":"475","line":169,"column":9,"nodeType":"445","messageId":"446","endLine":169,"endColumn":20},{"ruleId":"443","severity":1,"message":"476","line":173,"column":9,"nodeType":"445","messageId":"446","endLine":173,"endColumn":20},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"477","line":20,"column":8,"nodeType":"445","messageId":"446","endLine":20,"endColumn":18},{"ruleId":"453","severity":1,"message":"454","line":164,"column":28,"nodeType":"455","messageId":"456","endLine":164,"endColumn":30},{"ruleId":"448","severity":1,"message":"466","line":547,"column":6,"nodeType":"450","endLine":547,"endColumn":8,"suggestions":"478"},{"ruleId":"453","severity":1,"message":"454","line":563,"column":33,"nodeType":"455","messageId":"456","endLine":563,"endColumn":35},{"ruleId":"453","severity":1,"message":"454","line":569,"column":33,"nodeType":"455","messageId":"456","endLine":569,"endColumn":35},{"ruleId":"453","severity":1,"message":"454","line":575,"column":32,"nodeType":"455","messageId":"456","endLine":575,"endColumn":34},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"477","line":21,"column":8,"nodeType":"445","messageId":"446","endLine":21,"endColumn":18},{"ruleId":"448","severity":1,"message":"466","line":714,"column":6,"nodeType":"450","endLine":714,"endColumn":8,"suggestions":"479"},{"ruleId":"453","severity":1,"message":"454","line":730,"column":33,"nodeType":"455","messageId":"456","endLine":730,"endColumn":35},{"ruleId":"453","severity":1,"message":"454","line":736,"column":33,"nodeType":"455","messageId":"456","endLine":736,"endColumn":35},{"ruleId":"453","severity":1,"message":"454","line":742,"column":32,"nodeType":"455","messageId":"456","endLine":742,"endColumn":34},{"ruleId":"443","severity":1,"message":"459","line":7,"column":3,"nodeType":"445","messageId":"446","endLine":7,"endColumn":17},{"ruleId":"443","severity":1,"message":"447","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":12},{"ruleId":"443","severity":1,"message":"460","line":13,"column":3,"nodeType":"445","messageId":"446","endLine":13,"endColumn":9},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"463","line":16,"column":3,"nodeType":"445","messageId":"446","endLine":16,"endColumn":11},{"ruleId":"448","severity":1,"message":"466","line":668,"column":6,"nodeType":"450","endLine":668,"endColumn":8,"suggestions":"480"},{"ruleId":"443","severity":1,"message":"458","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":8},{"ruleId":"448","severity":1,"message":"466","line":53,"column":6,"nodeType":"450","endLine":53,"endColumn":8,"suggestions":"481"},{"ruleId":"453","severity":1,"message":"454","line":164,"column":34,"nodeType":"455","messageId":"456","endLine":164,"endColumn":36},{"ruleId":"443","severity":1,"message":"482","line":1,"column":20,"nodeType":"445","messageId":"446","endLine":1,"endColumn":25},{"ruleId":"439","replacedBy":"483"},{"ruleId":"441","replacedBy":"484"},{"ruleId":"443","severity":1,"message":"444","line":19,"column":8,"nodeType":"445","messageId":"446","endLine":19,"endColumn":14},{"ruleId":"443","severity":1,"message":"485","line":20,"column":8,"nodeType":"445","messageId":"446","endLine":20,"endColumn":18},{"ruleId":"443","severity":1,"message":"486","line":9,"column":10,"nodeType":"445","messageId":"446","endLine":9,"endColumn":14},{"ruleId":"448","severity":1,"message":"449","line":16,"column":6,"nodeType":"450","endLine":16,"endColumn":8,"suggestions":"487"},{"ruleId":"443","severity":1,"message":"458","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":8},{"ruleId":"443","severity":1,"message":"471","line":109,"column":10,"nodeType":"445","messageId":"446","endLine":109,"endColumn":18},{"ruleId":"443","severity":1,"message":"472","line":109,"column":20,"nodeType":"445","messageId":"446","endLine":109,"endColumn":31},{"ruleId":"443","severity":1,"message":"473","line":110,"column":10,"nodeType":"445","messageId":"446","endLine":110,"endColumn":14},{"ruleId":"448","severity":1,"message":"466","line":137,"column":6,"nodeType":"450","endLine":137,"endColumn":8,"suggestions":"488"},{"ruleId":"443","severity":1,"message":"447","line":4,"column":3,"nodeType":"445","messageId":"446","endLine":4,"endColumn":12},{"ruleId":"443","severity":1,"message":"468","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":13},{"ruleId":"443","severity":1,"message":"459","line":7,"column":3,"nodeType":"445","messageId":"446","endLine":7,"endColumn":17},{"ruleId":"443","severity":1,"message":"447","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":12},{"ruleId":"443","severity":1,"message":"460","line":13,"column":3,"nodeType":"445","messageId":"446","endLine":13,"endColumn":9},{"ruleId":"443","severity":1,"message":"461","line":14,"column":3,"nodeType":"445","messageId":"446","endLine":14,"endColumn":19},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"463","line":16,"column":3,"nodeType":"445","messageId":"446","endLine":16,"endColumn":11},{"ruleId":"443","severity":1,"message":"469","line":17,"column":3,"nodeType":"445","messageId":"446","endLine":17,"endColumn":11},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"477","line":20,"column":8,"nodeType":"445","messageId":"446","endLine":20,"endColumn":18},{"ruleId":"443","severity":1,"message":"452","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":8},{"ruleId":"443","severity":1,"message":"459","line":7,"column":3,"nodeType":"445","messageId":"446","endLine":7,"endColumn":17},{"ruleId":"443","severity":1,"message":"447","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":12},{"ruleId":"443","severity":1,"message":"460","line":13,"column":3,"nodeType":"445","messageId":"446","endLine":13,"endColumn":9},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"463","line":16,"column":3,"nodeType":"445","messageId":"446","endLine":16,"endColumn":11},{"ruleId":"443","severity":1,"message":"457","line":1,"column":22,"nodeType":"445","messageId":"446","endLine":1,"endColumn":31},{"ruleId":"443","severity":1,"message":"458","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":8},{"ruleId":"443","severity":1,"message":"459","line":7,"column":3,"nodeType":"445","messageId":"446","endLine":7,"endColumn":17},{"ruleId":"443","severity":1,"message":"447","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":12},{"ruleId":"443","severity":1,"message":"460","line":13,"column":3,"nodeType":"445","messageId":"446","endLine":13,"endColumn":9},{"ruleId":"443","severity":1,"message":"461","line":14,"column":3,"nodeType":"445","messageId":"446","endLine":14,"endColumn":19},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"463","line":16,"column":3,"nodeType":"445","messageId":"446","endLine":16,"endColumn":11},{"ruleId":"443","severity":1,"message":"464","line":20,"column":10,"nodeType":"445","messageId":"446","endLine":20,"endColumn":19},{"ruleId":"443","severity":1,"message":"458","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":8},{"ruleId":"448","severity":1,"message":"466","line":53,"column":6,"nodeType":"450","endLine":53,"endColumn":8,"suggestions":"489"},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"477","line":21,"column":8,"nodeType":"445","messageId":"446","endLine":21,"endColumn":18},{"ruleId":"443","severity":1,"message":"482","line":1,"column":20,"nodeType":"445","messageId":"446","endLine":1,"endColumn":25},{"ruleId":"443","severity":1,"message":"486","line":2,"column":10,"nodeType":"445","messageId":"446","endLine":2,"endColumn":14},{"ruleId":"439","replacedBy":"490"},{"ruleId":"441","replacedBy":"491"},{"ruleId":"443","severity":1,"message":"444","line":19,"column":8,"nodeType":"445","messageId":"446","endLine":19,"endColumn":14},{"ruleId":"443","severity":1,"message":"485","line":20,"column":8,"nodeType":"445","messageId":"446","endLine":20,"endColumn":18},{"ruleId":"448","severity":1,"message":"449","line":16,"column":6,"nodeType":"450","endLine":16,"endColumn":8,"suggestions":"492"},{"ruleId":"443","severity":1,"message":"447","line":4,"column":3,"nodeType":"445","messageId":"446","endLine":4,"endColumn":12},{"ruleId":"443","severity":1,"message":"486","line":9,"column":10,"nodeType":"445","messageId":"446","endLine":9,"endColumn":14},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"477","line":20,"column":8,"nodeType":"445","messageId":"446","endLine":20,"endColumn":18},{"ruleId":"443","severity":1,"message":"458","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":8},{"ruleId":"443","severity":1,"message":"471","line":109,"column":10,"nodeType":"445","messageId":"446","endLine":109,"endColumn":18},{"ruleId":"443","severity":1,"message":"472","line":109,"column":20,"nodeType":"445","messageId":"446","endLine":109,"endColumn":31},{"ruleId":"443","severity":1,"message":"473","line":110,"column":10,"nodeType":"445","messageId":"446","endLine":110,"endColumn":14},{"ruleId":"448","severity":1,"message":"466","line":137,"column":6,"nodeType":"450","endLine":137,"endColumn":8,"suggestions":"493"},{"ruleId":"443","severity":1,"message":"452","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":8},{"ruleId":"443","severity":1,"message":"468","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":13},{"ruleId":"443","severity":1,"message":"459","line":7,"column":3,"nodeType":"445","messageId":"446","endLine":7,"endColumn":17},{"ruleId":"443","severity":1,"message":"447","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":12},{"ruleId":"443","severity":1,"message":"460","line":13,"column":3,"nodeType":"445","messageId":"446","endLine":13,"endColumn":9},{"ruleId":"443","severity":1,"message":"461","line":14,"column":3,"nodeType":"445","messageId":"446","endLine":14,"endColumn":19},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"463","line":16,"column":3,"nodeType":"445","messageId":"446","endLine":16,"endColumn":11},{"ruleId":"443","severity":1,"message":"469","line":17,"column":3,"nodeType":"445","messageId":"446","endLine":17,"endColumn":11},{"ruleId":"443","severity":1,"message":"486","line":2,"column":10,"nodeType":"445","messageId":"446","endLine":2,"endColumn":14},{"ruleId":"443","severity":1,"message":"457","line":1,"column":22,"nodeType":"445","messageId":"446","endLine":1,"endColumn":31},{"ruleId":"443","severity":1,"message":"458","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":8},{"ruleId":"443","severity":1,"message":"458","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":8},{"ruleId":"448","severity":1,"message":"466","line":53,"column":6,"nodeType":"450","endLine":53,"endColumn":8,"suggestions":"494"},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"477","line":21,"column":8,"nodeType":"445","messageId":"446","endLine":21,"endColumn":18},{"ruleId":"443","severity":1,"message":"459","line":7,"column":3,"nodeType":"445","messageId":"446","endLine":7,"endColumn":17},{"ruleId":"443","severity":1,"message":"447","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":12},{"ruleId":"443","severity":1,"message":"460","line":13,"column":3,"nodeType":"445","messageId":"446","endLine":13,"endColumn":9},{"ruleId":"443","severity":1,"message":"461","line":14,"column":3,"nodeType":"445","messageId":"446","endLine":14,"endColumn":19},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"463","line":16,"column":3,"nodeType":"445","messageId":"446","endLine":16,"endColumn":11},{"ruleId":"443","severity":1,"message":"464","line":20,"column":10,"nodeType":"445","messageId":"446","endLine":20,"endColumn":19},{"ruleId":"443","severity":1,"message":"459","line":7,"column":3,"nodeType":"445","messageId":"446","endLine":7,"endColumn":17},{"ruleId":"443","severity":1,"message":"447","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":12},{"ruleId":"443","severity":1,"message":"460","line":13,"column":3,"nodeType":"445","messageId":"446","endLine":13,"endColumn":9},{"ruleId":"443","severity":1,"message":"462","line":15,"column":3,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"463","line":16,"column":3,"nodeType":"445","messageId":"446","endLine":16,"endColumn":11},{"ruleId":"443","severity":1,"message":"482","line":1,"column":20,"nodeType":"445","messageId":"446","endLine":1,"endColumn":25},"no-native-reassign",["495"],"no-negated-in-lhs",["496"],"no-unused-vars","'isAuth' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPopup'. Either include it or remove the dependency array.","ArrayExpression",["497"],"'Input' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Modal' is defined but never used.","'InputAdornment' is defined but never used.","'Slider' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'MenuItem' is defined but never used.","'useParams' is defined but never used.","'colorSet' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["498"],"'IconButton' is defined but never used.","'Checkbox' is defined but never used.",["499"],"'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'open' is assigned a value but never used.",["500"],"'handleClose' is assigned a value but never used.","'editDetails' is assigned a value but never used.","'Pagination' is defined but never used.",["501"],["502"],["503"],["504"],"'Slide' is defined but never used.",["495"],["496"],"'CodeEditor' is defined but never used.","'Link' is defined but never used.",["505"],["506"],["507"],["495"],["496"],["508"],["509"],["510"],"no-global-assign","no-unsafe-negation",{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"513","fix":"515"},{"desc":"513","fix":"516"},{"desc":"513","fix":"517"},{"desc":"513","fix":"518"},{"desc":"513","fix":"519"},{"desc":"513","fix":"520"},{"desc":"511","fix":"521"},{"desc":"513","fix":"522"},{"desc":"513","fix":"523"},{"desc":"511","fix":"524"},{"desc":"513","fix":"525"},{"desc":"513","fix":"526"},"Update the dependencies array to be: [setPopup]",{"range":"527","text":"528"},"Update the dependencies array to be: [getData]",{"range":"529","text":"530"},{"range":"531","text":"530"},{"range":"532","text":"530"},{"range":"533","text":"530"},{"range":"534","text":"530"},{"range":"535","text":"530"},{"range":"536","text":"530"},{"range":"537","text":"528"},{"range":"538","text":"530"},{"range":"539","text":"530"},{"range":"540","text":"528"},{"range":"541","text":"530"},{"range":"542","text":"530"},[437,439],"[setPopup]",[22424,22426],"[getData]",[6215,6217],[3540,3542],[17123,17125],[22167,22169],[19960,19962],[1091,1093],[437,439],[3540,3542],[1091,1093],[437,439],[3540,3542],[1091,1093]]